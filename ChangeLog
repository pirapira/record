2018-04-24  Yoichi Hirai  <yoichi@ethereum.org>

2018-04-23  Yoichi Hirai  <yoichi@ethereum.org>

	* general-merkel

	* cpp-ethereum: reviewed 4974

	* comm: heard the coredev mtg.

	* tests: fixed PR 447

	* travel: prepared

2018-04-20  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: improved PR 305

	* ethereumjs: commented on PR 272

	* testeth: rebased PR 28

	* tests: implemented DoubleSelfdestructTest2
	fixed PR 455, 447

	* eth-isabelle: found a test in cpp-ethereum that computes the hash of a transaction

2018-04-19  Yoichi Hirai  <yoichi@ethereum.org>

	* kevm: saw PR 187.  typed exception

	* testeth: fixed PR 31, 24

	* tests: adding a new test about double selfdestruct by a single contract

	* rlp-ocaml: fixed uninstall in `opam` file so that it removes META file

	* bamboo: added obsidian into readme

	* yellowpaper: investigated PR 305.  still discussion with Nick S.

	* read: really a nice blog https://raywang.tech/2017/12/20/Formal-Verification:-The-Gap-between-Perfect-Code-and-Reality
	about commitment schemes

2018-04-17  Yoichi Hirai  <yoichi@ethereum.org>

	* testeth: dealt with some Travis trusty change (ported .travis configuration from cpp-ethereum)
	adding better error messages

	* bamboo: fixed the failing endtoendtest.native on a newer cpp-ethereum (it was a wrong field name in genesis config)

	* tests: merged PR 451

	* testeth: fixed PR 28

2018-04-16  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: reviewed PRs 684 and 685

	* bamboo: trying to update cpp-ethereum used for testing the compiler
	sketched the format of storage layout information.

	* casper-rv: practiced quotient type in Isabelle/HOL

	* survey: saw a bit of Adami Chlipala's talk in CCC

	* testeth: document in README how to run tests in parallel

	* awesome-evm: added eth-acl2

2018-04-13  Yoichi Hirai  <yoichi@ethereum.org>

	* casper-rv: some discussion about the static data structure.

	* read: Victor's supercompilation for free.

	* tests: PR 444. removing more tests that use special mock.

	* eth-acl2: Kevin told me about it.  Spreading rumor to relevant people.

	* obsidian

	* eth-isabelle: implemented implement hash_of_transaction, to be tested

2018-04-12  Yoichi Hirai  <yoichi@ethereum.org>

	* read: http://vitalik.ca/general/2017/12/17/voting.html

	* casper-rv: checked how Isabelle behaves with rational numbers
	porting the Coq model into Isabelle somehow

	* comm: meeting with some researchers

	* kevm: reviewed https://github.com/kframework/evm-semantics/pull/183

2018-04-11  Yoichi Hirai  <yoichi@ethereum.org>

	* casper-rv: learned about the tool to be used
	got an estimate of the dangerous duration between finalization
	read coming model of data structures

	* tests: found more VM tests that require mocks

2018-04-10  Yoichi Hirai  <yoichi@ethereum.org>

	* casper: meeting with RV. rather calm.

	* cpp-ethereum: fixed PR 4943

	* tests: filed a PR for the first case in issue 431 about double self-destruct
	fixed PR 445

2018-04-09  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: read the script of the last coredev call.

	* yellowpaper: fixed PR 391
	filed a PR for issue 312
	reviewed PR 648

	* cpp-ethereum: fixed PR 4943

	* bamboo: finally integrated the bamboo-test based on ganache-cli

	* ropsten: synced geth with archive mode, to get some traces.

2018-04-06  Yoichi Hirai  <yoichi@ethereum.org>

	* casper: read RV's casper model in K in development

	* tests: filed an issue about fillchain with some unusual block parameters
	fixed PR 445

	* cpp-ethereum: one thread had two condition variable (Client--Worker), filed a PR unifying these
	fixed one threadsanitizer warning

2018-04-05  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: removing the dashed lines

	* EIPs: fixed PR 689

	* survey: installed acl2
	I think I have to choose a good first project for acl2.

	* cpp-ethereum: shorter response to sigint

	* ewasm: read design: should continue

	* tests: identified which VM tests to go

2018-04-04  Yoichi Hirai  <yoichi@ethereum.org>

	* tests: issue 415, started removing VM tests
	tried retesteth and filed an issue

	* casper: saw the K specs being developed

	* eth-isabelle: fixed the build failure of one PR

	* EIPs: rebased PR 646
	rebased PR 689

	* yellowpaper: rebased PR 307
	reviewed PR 596
	removed my feature branches from ethereum/yellowpaper

	* bamboo: rebased PR 263

	* sharding: saw sharding phase 1 spec

	* awesome-evm: added haskell assembly

	* read: saw the program of WTSC 2018
	saw "Online Detection of Effectively Callback Free Objects"

	* moon: reading a draft containing a type system (Victor is working on), I have to ask something to the author

2018-04-03  Yoichi Hirai  <yoichi@ethereum.org>

	* env: bought a display for my home office

	* awesome-evm: added jsnark (PR by amiller)

	* yellowpaper: edit PR 305 as suggested
	reviewed PR 679, 579

	* tests: adding a test that runs a single REVERT (with the empty stack)

	* eth-isabelle: still trying to encode a transaction as an RLP

	* survey: Succinct Representation of Concurrent Trace Sets
	circles UBI
	Holochain

	* casper: had a look at https://github.com/ethereum/casper/blob/master/IMPLEMENTATION.md
	call with RV

2018-03-29  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: some external comm

	* cpp-ethereum: filed a PR to test stShift

	* eth-isabelle: trying to add lem-pdf in circleCI, timeout

	* paper: polished and submitted

	* env: tried k3 mode

	* tests: wrote a test case that calls identity precompiled contract, specifying a bigger input than the output

2018-03-28  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle: filed a PR adding the termination proof of lexico_order

	* casper: checked Isabelle features 'typedef' cannot depend on variables in a locale.
	tried instantiating DynamicValidatorSetOneMessage
	renamed bwd into rear

	* bamboo: defined contract headers in spec

	* paper: polishing

2018-03-27  Yoichi Hirai  <yoichi@ethereum.org>

	* casper: meeting with RV

	* pos: merged a PR

	* isabelle: figured out 'function' requires termination proof.

	* paper: polishing.

2018-03-26  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: adding shifts

	* pm: commented.

	* casper: commented on a Coq model

	* pos: renamed variables v into epoch

	* testeth: removing hera dependency.  maybe easier docker build.

	* paper: filling more literature

	* kevm: saw the ERC 20 verification

2018-03-23  Yoichi Hirai  <yoichi@ethereum.org>

	* tests: fixed PR 424 about arithmetic shifting

	* paper: polishing

2018-03-22  Yoichi Hirai  <yoichi@ethereum.org>

	* casper: explaining stuff

	* paper: small improvements

	* tests: fixed PR 423

2018-03-21  Yoichi Hirai  <yoichi@ethereum.org>

	* casper: changing type variables in the Isabelle proof

	* ../../howm/2018/03/2018-03-21-111102.txt: some inter communication

2018-03-20  Yoichi Hirai  <yoichi@ethereum.org>

	* ../paper-compare-tools/paper/paper.tex: corrected typos, filled more sentences into discussion.

	* cpp-ethereum: explaining selfdestruct(this) better

2018-03-19  Yoichi Hirai  <yoichi@ethereum.org>

	* awesome EVM list: added echdna into the list

	* casper: seeking assumptions

	* tests: travis fails when there are multiple fields of the same name in a JSON object

	* paper: still debugging

	* comm: joined a new channel

	* cryptoeconomics: spreading the word

2018-03-16  Yoichi Hirai  <yoichi@ethereum.org>

	* casper: understood how validator ratios change

	* wasm-semantics: reviewed PR 10

	* awesome-EVM-list: added zokrates and snarky
	tried Echidna

2018-03-15  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: fixing the build system

	* paper: still filling in

	* runtimeverification: a meeting

2018-03-14  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle: checked how to encode crypto parameters in a transaction

	* paper: fixing

2018-03-13  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: filed two small PRs for typography
	reviewed #596 and #597

	* paper: filling more and more

	* tests: filed a PR about calling identity builtin with a bigger output size than input

2018-03-07  Yoichi Hirai  <yoichi@ethereum.org>

2018-03-06  Yoichi Hirai  <yoichi@ethereum.org>

	* tests: decided on the format of test names

	* eth-isabelle: sha3_update problem.  code generation is not working with a 'function' definition.

	* cedille: tested a bit

	* paper: filling more and more

	* bamboo: a call with some contributors

2018-03-05  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: merged two PRs about elliptic curves, backporting to EIP

	* tests: adding test cases for bit shifting

2018-02-14  Yoichi Hirai  <yoichi@ethereum.org>

2018-02-13  Yoichi Hirai  <yoichi@ethereum.org>

	* ethresearch: looked at the ring-signature based block production proposal

2018-02-12  Yoichi Hirai  <yoichi@ethereum.org>

	* tests: modified ethereum/tests a bit

	* testeth: worked on issue 4

2018-02-08  Yoichi Hirai  <yoichi@ethereum.org>

2018-02-07  Yoichi Hirai  <yoichi@ethereum.org>

	* testeth: set up circle CI in testeth repository

2018-02-06  Yoichi Hirai  <yoichi@ethereum.org>

	* meeting

2018-02-05  Yoichi Hirai  <yoichi@ethereum.org>

	* meeting

2018-02-02  Yoichi Hirai  <yoichi@ethereum.org>

	* sharding: impurity checker should also check GAS instruction, filed a PR.

2018-02-01  Yoichi Hirai  <yoichi@ethereum.org>

	* read: stateless client thing
	sharding spec

2018-01-31  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: answered issue 517 about ethash
	fixed my PR 443, 446, 323, 307, 303

2018-01-30  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: reviewed some PRs

	* cpp-ethereum: reviewed 4809

	* tests: documented difficulty tests
	added a test case about modexp with modlen = 999188

	* comm: brainstormed for Friday's interview

2018-01-29  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: reviewed many PRs.

2018-01-26  Yoichi Hirai  <yoichi@ethereum.org>

	* paper: figured that availability is important

	* cpp-ethereum: reviewed PR 4809

	* kevm: trying to run the blockchain tests.  filed one issue.

2018-01-25  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: some survey on ACL2

	* cpp-ethereum: started experimenting the geth rule
	reviewed PR 841

	* bamboo: a little bit of specification

	* EIPs: reviewed some EIPs
	reviewed 831

	* idris: read the Idris book 5.3

2018-01-24  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: PR 260, discussed how to proceed

	* cpp-ethereum: reviewed PR 4783, 4804

	* EIPs: reviewed EIP-831

	* comm: edited the formal verification overview page a bit
	read about ERC777.
	read about BIP32.
	paper, defined missing macros

	* yellowpaper: reopened PR 438 in a right branch
	fixed PR 302
	reviewed some PRs

2018-01-23  Yoichi Hirai  <yoichi@ethereum.org>

	* tests: filed a PR about RETURNDATASIZE/RETURNDATACOPY after CREATE (from init code) that fails for a REVERT with nonempty data

	* cpp-ethereum: fixed one bug introduced recently

	* comm: paper, writing a bit more.

2018-01-22  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: moving PRs from master to frontier.

	* bamboo: a little bit of specification

	* tests: found a problem in testeth.  bisecting.

	* cpp-ethereum: bisecting a problem in testeth

	* comm: changed the topic of the paper.

2018-01-19  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: last minute fixes

2018-01-18  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: the paper reviews are done

	* paper: wrote a bit more

	* yellowpaper: merged 407

	* eth-isabelle: fixed PR 477

2018-01-17  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: some internal communication
	some paper reviews

	* cpp-ethereum: reivewed PR 4777

	* yellowpaper: changed target branches of my PRs from metropolis to master

2018-01-16  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: some internal communications

	* cpp-ethereum: reviewed PR 4771, 4766, 4731

	* EIPs: reviewed PR 831

	* paper: setting up style files.

	* tests: some discussion about reducing the number of tests
	reviewed PR 389

	* yellowpaper: try to add a branch table in YP

2018-01-15  Yoichi Hirai  <yoichi@ethereum.org>

	* plan: filtered most of middle-priority tasks into low-priority
	planned paper writing.

	* comm: tried Pyramid Scheme

2018-01-05  Yoichi Hirai  <yoichi@ethereum.org>

	* metamath: got an idea how it would work.

	* homestead-guide: merged a lot.

	* comm: ACL2, walking tour http://www.cs.utexas.edu/users/moore/acl2/v8-0/combined-manual/index.html?topic=ACL2____A_02Walking_02Tour_02of_02ACL2

2018-01-04  Yoichi Hirai  <yoichi@ethereum.org>

	* tests: reviewed PR 388

	* EIPs: reviewed 9 PRs.

	* bamboo: rpc 2.2.0 and 2.0.0--2.0.0 had an opam packaging problem.  2.2.0 has a runtime issue, endToEnd.native hungs.

	* comm: Moon

2018-01-03  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: reviewed PR 4710

	* bamboo: a little bit of specification

	* eth-isabelle: a little bit of rlp encoding

	* comm: provided a bit of opinion about CBC sharding formulation

	* awesome-ethereum-virtual-machine: added sputter

	* bamboo: reported a build failure of ocaml-rpc
	https://github.com/mirage/ocaml-rpc/issues/70

2018-01-02  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: wrote a bit of specification

	* KEVM: got PR 99 merged.

	* awesome-ethereum-virtual-machine: added ethersplay and Manticore

	* eth-isabelle: fixed PR 473.

	* EIPs: reviewed PR 627, PR 808, PR 758, PR 801
	learned about JSON RPC subscriptions

	* simple-plasma: refining challengeWithdrawal function

	* cpp-ethereum: reviewed PR 4735

	* comm: checked https://eprint.iacr.org//2017/878
	watched Griffith's talk in Devcon3.
	week in ethereum news

	* tests: adding a test case that tries RETURNDATACOPY and RETURNDATASIZE after a REVERT during a CALLCODE
	reviewed #381

2017-12-21  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: reviewing 4710

2017-12-20  Yoichi Hirai  <yoichi@ethereum.org>

	* simpleplasma: modeling submitBlockHeader
	started modeling the second and the third claims

	* cpp-ethereum: reviewed PR 4712

2017-12-19  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: wrote about EIPs and eth-isabelle in the roundup draft.

	* EIPs: reviewed PR 758

	* cpp-ethereum: reviewed PR 4698 and 4670 a bit.

	* eth-isabelle: fix build on execute-blockchain-test branch

2017-12-18  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle: fix build

	* tests: reviewed PR 382

	* simpleplasma: filling in missing definitions

	* safeInteger: found a nice lemma in Isabelle
	(sint ?x + sint ?y = sint (?x + ?y)) = ((?x + ?y XOR ?x) AND (?x + ?y XOR ?y) >> size ?x - 1 = 0)

2017-12-15  Yoichi Hirai  <yoichi@ethereum.org>

	* casper: https://www.youtube.com/watch?v=uQ3IqLDf-oo

2017-12-14  Yoichi Hirai  <yoichi@ethereum.org>

	* kevm: identified two most important questions.

	* eth-isabelle: solved many build issues.

	* env: dist-upgrade in order to solve the secp256k1-ml build issue

	* tests: adding a test cases about RETURNDATACOPY after DELEGATECALL.

	* bamboo: compiled vault.bbo into EVM bytecode readable from Isabelle.
	a little bit of specification.

	* ../practice/simple_plasma/SimplePlasma.v: first formulation of the first claim with lots of holes.  Maybe I should fill in holes, or maybe I should cover the second and the third claims in a patchy way first.

	* eth-isabelle: fixed the compilation of OCaml code in the branch execute_blockchain_test

2017-12-13  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle: implemented RLP encoding of nonces (just using bigint encoding)
	found a linker error for secp256k1.
	found Travis fails on secp256k1-ml repository.

	* coredevcall: some coordination

	* EIPs: reviewed PR 597.

	* KEVM: finished reading evm.md  I should still sort notes for importance.

	* comm: somehow reading a paper, preparing for a meeting.

2017-12-12  Yoichi Hirai  <yoichi@ethereum.org>

	* KEVM: still reading evm.md collecting questions.

	* sharding: got an answer to the GitHub issue I raised yesterday

	* cpp-ethereum: reviewed PR 4694

	* EIPs: reviewed PR 796.  No comments on 797.

	* solidity: reviewed PR 3203
	continued reviewing PR 3120

2017-12-08  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity: reviewed one or two PRs

	* cpp-ethereum: reviewed 4652

	* eips: reviewed some more eips

	* kevm: still reading
	wondered if there is a test that supplies just six arguments to STATICCALL; turned out there is.

2017-12-07  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle: CI fixed on master.

	* read: 0x, mechanism design, hydra, statebox, ztrust.tech, SEP logic and games, metamath. ERC20-K, finite fields.

	* bamboo: planned vault.bbo verification.
	small progress on the specification.

	* test: adding two GeneralStateTests about RETURNDATACOPY after REVERT in a staticcall.

2017-12-06  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle: fixing the CI build on master

	* test: adding one GeneralStateTest about RETURNDATACOPY after REVERT in an init code.

	* math: started reading the finite field book

	* bamboo: small progress on the specification.

	* meta: updated the project list.
	KEVM thing and Plasma thing are the top.

2017-12-05  Yoichi Hirai  <yoichi@ethereum.org>

	* awesome-ethereum-virtual-machine: removed a deprecated project from the list

	* cpp-ethereum: reviewing PR 4678

	* EIPs: submitted a PR #790

	* plasma: somehow seeing the final picture.

2017-12-04  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: reviewing 4664.

	* ../practice/simple_plasma/SimplePlasma.v: trying to model Merkle trees in Coq (axiomatically)

	* casper: reading the CBC casper draft.  Now I understand what those simulations were.

	* comm: understood k-bucket algorithms
	sent an email to KEVM maintainer

	* EIPs: mainly working on PRs 212 and 214.

2017-12-01  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: reviewed 4637

	* EIPs: some editing.
	pushing for more CC0.

	* casper: casper economics basics, continued reading.

	* KEVM: listened to more tutorial videos

	* bamboo: a little bit of spec writing
	implemented stack overflow detection
	thought about delegatingcall; no plans to use it at the moment

2017-11-30  Yoichi Hirai  <yoichi@ethereum.org>

	* casper: finished accountable safety on dynamic validator sets somehow

	* EIPs: #206, some bureaucratic changes
	EIP #462, some formalities
	EIP #658, some formalities
	EIP #198, some formalities

	* cpp: reviewing #4664

2017-11-29  Yoichi Hirai  <yoichi@ethereum.org>

	* recovering: worked at home

	* cpp-ethereum: reviewed 4658, 4654

	* casper: continuing with a stricter double_vote rule.

2017-11-28  Yoichi Hirai  <yoichi@ethereum.org>

	* sick: spent in bed

2017-11-27  Yoichi Hirai  <yoichi@ethereum.org>

	* EIPs: tried to finalize PR 198, but noticed a copyright problem.

	* academic: performed paper reviews

	* cpp-ethereum: andrei finished 4579.
	reviewing 4625, 4658

	* casper: the proof got stuck about accountable safety with dynamic validator set.  Asked a question with a counterexample.

2017-11-24  Yoichi Hirai  <yoichi@ethereum.org>

	* casper: spent the whole week on the accountable safety proof with dynamic validator sets and one-message protocol.

2017-11-20  Yoichi Hirai  <yoichi@ethereum.org>

2017-11-17  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: got EIPs editorship.  Going around EIPs in a round-robin manner.
	Still reading the Reed-solomon proximity proof paper.
	Read Week in Ethereum News.

	* casper: got answers to my questions.  Somehow convinced those rules work.
	Adjusted statements and definitions.
	Figured that the chosen next validator set can change from checkpoints to checkpoints.

2017-11-16  Yoichi Hirai  <yoichi@ethereum.org>

	* tests: reviewed one test PR

	* casper: stuck in the dynamic validator set case, started asking questions.

2017-11-15  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: read a draft about blockchain governance.
	reading a draft.

	* casper: made some progress in dynamic validator set with one-message CFG (in Isabelle)

2017-11-14  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: filed a fix to issue 4642.

	* bamboo: added default methods to vault.bbo

	* comm: had a look at laser-ethereum
	added laser-ethereum to awesome-ethereum-virtual-machine list
	spent some time reading early crypto writings.
	Fast Reed Solomon Interactive Oracle Proofs of Proximity: noticed I need the FFT thing.
	answered people interested in formal methods, where to start https://yoichihirai.com/fm.html
	deflected an interview request.

	* casper: defined a fork in the dynamic-validator one-message setting

2017-11-13  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: reading mythril

	* tests: confirmed that a test case is already in the repository
	https://docs.google.com/spreadsheets/d/1xat7UI8GtB4ZGVdlK5_XQSHJZaMThi4SrlcL8XMZb5Q/edit#gid=1605675414&range=D48

2017-11-10  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: checked what moon-browser is
	saw a demo of moon at Devcon3
	skimmed ethereumresearch discourse pages
	"hello PLT researchers" document, thought about it a bit.
	explored a bit of the research github repos.

2017-11-09  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: created an issue about call x then become A().

	* env: recovering from jet-lag and a 44 hour trip

	* comm: was in Devcon3
	checked https://edwinb.wordpress.com/2016/10/21/state-machines-all-the-way-down/ kind of ideal for implementing RDBMS
	watched https://www.youtube.com/watch?v=6JZgCuRrtyo


2017-10-26  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: fix PR 226

	* cpp-ethereum: review PRs 4625, 4627

	* comm: preparing cancun slides.  practiced one talk
	reading a mathematical draft
	got the idea of stateless client

	* EVM-awesome: edited a bit.

2017-10-25  Yoichi Hirai  <yoichi@ethereum.org>

	* env: updated some of my nodes.

	* cpp-ethereum: reviewed PR 4627

	* bamboo: in the specification, writing how to evaluate array access expressions.

	* eth-isabelle: saw a PR error, but could not reproduce locally.

	* test: a new case about calling modexp with modsize=1 and checking the return size.
	reviewed PR 365

	* comm: preparing cancun slides.  One more talk.

	* casper: slowly defining things in one-message casper with dynamic validator sets.

2017-10-24  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: rebased PR 4610, rebased PR 4579

	* comm: preparing cancun slides.
	thought a bit about counterfactual deployment.  Ah, the cost of exodus is better with Plasma, maybe.

	* eth-isabelle: updating README about the Isabelle version
	closed issue 431

	* bamboo: a bit of specification: contracts.

	* comm: read "An Empirical Study on the Correctness of Formally Verified..."
	very interesting.  Don't believe UDP packets arrive.  System programming is hard.
	Added a link to the README of Bamboo, to a blog post about implementing a vault.

	* casper: started the safety proof for dynamic validator sets for the one-message protocol.

2017-10-23  Yoichi Hirai  <yoichi@ethereum.org>

	* plasma: had a brief look at the simple plasma document.

	* eth-isabelle: started HoareWithInvariant.thy

	* comm: worked more on the Cancun slides
	wrote a snapshot post
	read vlad's casper paper

	* tests: reviewed PRs 361 and 362.
	wrote a test case about a successful call to modexp with modsize = 0 followed by returndatasize

	* cpp-ethereum: strange error in cpp-ethereum CircleCI Mac build.  Not reproducible in the SSH sessions provided by CircleCI, or with ASAN. @winsvega has some idea about it.  I'm also trying removing some statically initialized variables.

2017-10-20  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: tsan-easy branch had a problem in mac build in Travis.
	I could not reproduce this on my mac.
	reviewed pr 4612

	* comm: don't get those tokens... post.
	saw the SSL cert fixed.
	drew cancun slides on paper.
	added Function Signature database to the awesome EVM list.

2017-10-19  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: fixed the split PR 4609 about ThreadSanitizer warnings

	* comm: cancun slides, drawing more on paper
	wrote a blog post about vault

2017-10-18  Yoichi Hirai  <yoichi@ethereum.org>

	* awesome-ethereum-virtual-machine:
	started trying mythril

	* bamboo: rewrote vault.bbo with numeric literals.

	* cpp-ethereum:
	moving m_tq to Client from ClientBase
	cpp 4579, fixed build on gcc 4.x and split the PR.
	closed 3586

	* comm: started writing a snapshot blog post
	updated the formal verification overview a little bit.
	writing a blog post about vault.bbo
	started writing a warning about tokens

	* env: got a new mouse.  I couldn't drag things with the old one.

2017-10-17  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: defining blocks in the bamboo spec

	* homestead-guide: found that the content is not updated to the github contents.  Raised an issue.

	* tests: fixed PR 356 according to @winsvega's opinion

	* comm: preparing cancun slides
	started preparing cancun trip in details

	* cpp-ethereum: tried to reproduce issue 3586, but could not using the original commit.
	Still working on PR 4579

2017-10-16  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: wrote something on reddit.
	

	* cpp-ethereum: still working on PR 4579 about ThreadSanitizer warnings.

	* casper: A note on data availability and erasure coding.  Started wondering about the multidimensional thing.

	* evmjit: reviewed PR 135 partially about CREATE return data.

	* eth-isabelle: started implementing rlp_of_transaction function.  This is for the blockchain tests.
	removed the keyword ""

	* meta: task list cleanup.  many moved from priority:H to priority:M

	* bamboo: saw 0.0.02 on opam

	* test: fixed testeth --all run, but dimitry was quicker

2017-10-13  Yoichi Hirai  <yoichi@ethereum.org>

	* byzantium: added one test case to ethereum/tests

	* comm: wrote slides until picture 12

	* bamboo: trying to release 0.0.02 (PR 209)
	merged a PR about decimal literal.

	* eth-isabelle: adjusted the Travis build to Isabelle2017

	* ../bamboo/doc/spec.tex (section{Sentences}):
	started listing sentences.

2017-10-12  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: PR 4579, fixed and further added protections

	* env: set up a new home server

2017-10-11  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: still preparing a medium post about bamboo
	preparing a new version of cancun slides
	took on program committeeing

	* bamboo: working on a new version 0.0.02.  There has been a breaking change.
	giving feedback to PR 208

2017-10-10  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: still working on PR 4579
	reviewed 4592, 4587

	* metropolis: created one test case following an interesting input to modexp

	* eth-isabelle: started using Isabelle 2017
	A type error happens in Apply_Trace.thy
	jEdit now does not open the missing dependencies automatically.

	* casper: cleaned up the one message safety proof.

	* comm: read a draft

2017-10-09  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: PR 4579 about removing TSAN warning: working with Andrei

	* metropolis: added some test cases in the spreadsheet

	* eth-isabelle: implemented address-to-byte list conversion function, but CI is failing.  needs investigation.

	* bamboo: some progress on the spec
	Commented on PR 208.

	* hive: worked on issue 81 about genesis config format for cpp-ethereum

2017-10-06  Yoichi Hirai  <yoichi@ethereum.org>

	* casper: safety proof on the new version finished.

	* comm: gave comments about a new language.

2017-10-05  Yoichi Hirai  <yoichi@ethereum.org>

	* casper: found a new version.  started working on it.

	* cpp-ethereum: filed ??? about ThreadSanitizer

2017-10-04  Yoichi Hirai  <yoichi@ethereum.org>

	* kevm: succeeded in building KtoIsabelle
	what next?  Translating KEVM into Isabelle maybe.

	* comm: drew one picture about the vault
	drew some slides for Cancun
	answered several questions about eth-isabelle
	trying to organize a trip
	reviewed some project prospect

	* cpp-ethereum: ThreadSanitizer on eth/eth
	review PR 4572
	review PR 4545, 4567

2017-09-29  Yoichi Hirai  <yoichi@ethereum.org>

	* pos: merged a much nicer proof for the minimum slashing conditions.

	* comm: drew some slides for Cancun

	* kevm: installed pandoc-tangle on the old machine.

	* cpp-ethereum: fixed PR 4566, which is about renaming the file TransactionBase.h, got it merged.

	* bamboo: planned how to do bytestrings

2017-09-28  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: fixed PR 4547 about a race condition.
	got PR 4553 merged about another race condition.

	* byzantium: added some more tests in the spreadsheet

	* comm: still drawing slides for Cancun
	started an article about vault.bbo

	* eth-isabelle: added some tests for rlp_of_transaction
	I wonder if this should be in this repository, or in some Ethereum module

2017-09-27  Yoichi Hirai  <yoichi@ethereum.org>

	* byzantium: RETURNDATACOPY after a failing CALL (due to insufficient balance) should throw exception if offset is not zero

	* yellowpaper: added a branch called byzantium

	* comm: drawing slides for Devcon
	tried ethdasm, but got an error, raised an issue.

	* kevm: tried quick tests, and saw one failure. I need to report it.

	* bamboo: added syntactic types in the spec
	https://github.com/pirapira/bamboo/pull/199 added a vault as an example

	* cpp-ethereum: PR 4564, removing unused code
	got PR 4481 merged.  About a typo in the word validity.
	got PR 4455 merged: about a race condition.
	fixed PR 4547, no clean ways.
	fixed PR 4523, about checking genesis config JSON format.

2017-09-26  Yoichi Hirai  <yoichi@ethereum.org>

	* env: set up the home server.  It's very comfortable remotely, but noisy in proximity.  Started considering a new machine.

	* cpp-ethereum: rebased 4481, about Validity typo.
	fixed PR 4547, about avoiding race condition.
	rebased 4523, which is about validating genesis config JSON

	* comm: preparing a couple of slides for Cancun
	now drafting slides for the dynamic validator set
	Fixed the "another Casper" article on medium, based on comments.

	* tests: fixed PR 338
	tried an old issue 305 and saw it does not happen anymore.

2017-09-25  Yoichi Hirai  <yoichi@ethereum.org>

	* env: setting up a development server on my own

	* cpp-ethereum: rebased PR 4481, which is about the typo in the word Validity
	completed the avoid-multiple-locks branch
	reviewed PR 4543, which is difficulty test

	* comm: drew picture two for the Devcon talk.
	contributed a few paragraphs to the roundup

	* bamboo: trying to fix the build of PR 197.  The problem seems to happen because I removed endl; in eth/eth.

	* eth-isabelle: split the task of parse_blockchaintests into rlp of transaction and hash of transaction

	* kevm: tried running tests.  saw many successes.
	The key was to use jdk version 8.

	* roudup: gathered stuff for roundup from below.

2017-09-22  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: changed minds about empty account ambiguity.

	* bamboo: fixed PR 197
	replaced Gamma with sigma in the spec.

	* cpp-ethereum: fixed PR 4532
	fixed PR 4468
	fixed PR 4481

	* kevm: tried to compile K from source, but I was on a wrong version of JDK.

	* metropolis: wrote a test case that sees REVERT resets the returndata buffer.

2017-09-21  Yoichi Hirai  <yoichi@ethereum.org>

	* casper: read the basic.pdf noticed I need to change the slashing conditions in my cancun slides and in the Isabelle proofs
	read the first two sections in economics_basic.pdf

	* dry-analyzer: added an automatic monitoring on dry.yoichihirai.com

	* yellowpaper: marked state-cleaning PR as work in progress while we form an agreement
	answered questions on some GitHub issues.

	* bamboo: filed PR 197, moving a function to a library

	* cpp-ethereum: PR 4523: genesis config syntax checker in cpp.  I was also able to simplify the code.
	talked with Dimitry and filed a smaller PR moving one function from one file to a class.

	* eth-isabelle: somebody asked if proofs are still working, so checked if they are still working.  Probably they are using a newer version of Isabelle.

	* comm: answered yellow paper 340.

	* kevm: tried to run tests, reported one issue
	https://github.com/kframework/evm-semantics/issues/90

2017-09-20  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: created https://github.com/ethereum/EIPs/issues/716
	reviewed PR 336

	* LLL: figured why CompilerState.cpp writes twice to memory position zero [0]:0 [0]:(msize)

	* bamboo: decided to use sigma instead of Gamma for variable environments.

	* comm: drew one slide for cancun in an odp file

	* KEVM: tried to run test and got https://github.com/kframework/evm-semantics/issues/89

	* cpp-ethereum:
	fixed 4523
	rebased 4481

2017-09-19  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: answered a question on yellow paper issues 339, 343

	* metropolis: created test about big revert in init code.
	wrote a test about REVERT during a STATICCALL
	yellow paper PR 297 has finished.
	test 328

	* cpp-ethereum: reviewed cpp 4521
	reviewed cpp 4518
	rebased cpp 4481: Validity spelling
	rebased cpp 4468
	somehow implemented debug_accountInTrie method, to be used for Yellow Paper investigation
	adding syntax checker on genesis configuration JSON, unknown fields should throw errors

2017-09-18  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: figuring out next todos on the bamboo spec

	* comm: some bureaucracy about the trip last week

	* comm: drew some slides for devcon3

	* metropolis: implemented a test on pairing precompiled contract where g1 is invalid but g2 is zero.

	* metropolis: a test involving revert in DELEGATECALL

	* comm: accounting on arm research summit

	* comm: scheduled tweets showing slides about ARM Research Summit

	* cpp-ethereum:
	rebased tests 289
	rebased tests 313
	created PR 4513: fixing genesis configurations of misspelled keywords
	rebased PR 4468

2017-09-15  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: fixed build of 4481 (typo)
	reviewed 4499, 4496

	* comm: language meeting
	people know something about recent trends and so.

2017-09-14  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: ARM Research Summit
	not sure why I was there.

2017-09-07  Yoichi Hirai  <yoichi@ethereum.org>

	* ../bamboo/doc/spec.tex (subsubsection{Evaluation of an Expression Sentence}): started writing a Bamboo spec.

2017-09-06  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: preparing for a talk

	* cpp-ethereum:
	found a problem where tests are filled even when fillers contain wrong expectations
	fixed PR 4468
	trying to fix tests on PR 4458

	* eth-isabelle: pushed rlp-ocaml to opam

2017-09-05  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis: wrote a test with REVERT in a message call transaction

	* comm: preparing for a talk

	* ../rlp-ocaml/rlp.ml (decodeObj): implemented RLP in OCaml.  not yet published.
	some more tests need to be added.

2017-09-04  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: when InvalidStateRoot, the hex values in the error message contains 0x now

	* metropolis: wrote a test case where a call transaction REVERTs

	* eth-isabelle: figured I need RLP in OCaml before proceeding with BlockchainTests

	* comm: sent around some advertisements about a Stanford workshop
	some academic service
	made tu berlin slides available

2017-09-01  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: booked a bus from Cambridge to Stansted

	* metropolis: filled stRefund tests into blockchaintests again

	* cpp-ethereum: removed some deadcode
	replaced string concatenation with boost::filesystem::path::operator/()
	saw tests #294 fixed

2017-08-30  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: gave a talk.

2017-08-29  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: preparing for a talk
	reviewing a paper.

	* tests: fixed VMtest formats
	forgot to add --all option to --fillchain, so filling the leftovers.

2017-08-28  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis: fixing hive test suite

	* comm: preparing for a talk

	* cpp-ethereum: enabled a commented test cpp 4402
	cpp 4375: more REQUIRES before looking up elements in JSON
	cpp 4404: got merged.  Consolidate options of testeth

	* yellow paper: fixed PR about status code in transaction receipt

2017-08-25  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: swapped the first and second arguments of InvalidStateRoot
	cpp 4392 consolidate options
	cpp 4384 address collision eip
	raised an issue about testeth --fillchain should cause an error on a BlockchainTest
	cpp 4367
	cpp 4395 filler broken?
	cpp 4338 reward reduction EIP
	filler result depends on LLL!
	cpp 4395
	tests 213 merged, JSON schema!

2017-08-24  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum:
	worked on 4396, 4382 (const input), 4367, 4384 (EIP684)
	working on 4395.  Trying to bisect the issue.

2017-08-23  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: testing call, reported progress below

	* cpp-ethereum: filed a doBlockchaintest() refactoring PR.  still need to add a test
	removed TestHelper.h from most unit test files.
	removed a race condition, and a spurious sleep

	* metropolis: got test 269 merged for eip649
	started --fillchain after that on the server
	filed PRs for address collision failure

2017-08-22  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis: trying to fix the EIP649 branch

	* comm: saw what Bram Cohens talked about.

	* comm: still preparing a talk.  Saw all slides and made notes how to improve them.  I need to repeat this a few times more at least.

	* cpp-ethereum: removed a bug I introduced.
	("network" field got missing after fillBC)

	* comm: scheduled a paper review

	* cpp-ethereum: removed some unused macros

	* metropolis: fixed some test format issues (missing 0x)
	re-generated some tests whose post states contained empty accounts.
	empty accounts should not appear after EIP158.
	got EIP649 branch ready, I believed.

2017-08-21  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: still preparing for the talk

	* metropolis: filling more tests on eip649

	* cpp-ethereum: some glitch on develop branch.
	got some refactoring merged.

2017-08-18  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: preparing for talk

	* metropolis: implemented eip 649
	started fixing tests for eip649

2017-08-17  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle: fixed the coq build

	* metropolis: eip96-delay hit ethereum/tests

	* comm: preparing talk, more

	* ../cpp-ethereum/libethashseal/Ethash.cpp (verify): getting cpp4338 in shape.
	started changing tests
	proposed to make fake_blk_no at least zero

2017-08-16  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: tried on OCaml 4.05

	* cpp-ethereum: filed a small PR that changes the type of doTest() cpp PR 4341

	* metropolis: filled tests again for moving EIP96 to Constantinople
	Noticed that testeth does not tell all problems at once.
	Still implementing the mining related changes.

	* comm: preparing a talk.
	accepted an invitation to be a PC member.

2017-08-15  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: preparing a talk.

	* EIPs: got an EIP merged for address collision behavior

	* metropolis: filling tests again after moving EIP96 to Constantinople

2017-08-14  Yoichi Hirai  <yoichi@ethereum.org>

	* awesome-ethereum-virtual-machine: added directory names and file names

	* comm: contributed to the roundup document about bamboo, eth-isabelle and yellow paper

	* cpp-ethereum: still fixing PR 4329

	* metropolis: fixed a test case for OOM in modexp when expLen is too big.
	filed and got merged a PR that moves eip96 into Constantinople

2017-08-11  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis: saw some tests fixed on geth.
	found one still failing.
	coredev meeting added some more tasks.

	* cpp-ethereum: removed the races.
	opened PR for faster blockchain test filling.
	discussed with Andrei about the first refactoring move on testeth.

	* bamboo: started #177 interfaces
	Later somebody kindly took it.

2017-08-10  Yoichi Hirai  <yoichi@ethereum.org>

	* testeth: tried to remove the race conditions detected by tsan

	* comm: trying to read Plasma

2017-08-09  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis: started investigating a test failure

	* bamboo: removed uint in favor of uint256

2017-08-08  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: brainstormed again for the talk in Cambridge

	* eth-isabelle: implementing parsed_transaction_into_model_transaction (for running BlockChainTest)

	* bamboo: finished implementation of multiple side-effect detection.

	* metropolis: add a GeneralStateTest that RETURNDATACOPYs data from REVERT
	learned how to test go client locally
	learned how to benchmark opcodes and precompiled contracts on go-ethereum

2017-08-07  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: fixed issue 4304

	* eth-isabelle: rebased execute_blockchaintest branch

	* comm: read a draft from KEVM team.
	started preparing for the talk later this month

	* bamboo: making sure two side effects don't happen
	making sure all sentences have side effects
	asked evmlang people to read Bamboo semantics
	solved issue 171: added a test with two default case

	* metropolis: learned how to benchmark go-ethereum and parity
	found that Parity does not report results for ecadd and ecmul
	looked at the codesizeValid problem.  apparently problem is caused by the confusion from the authentic spec being a comment.

	* evm1.5: started defining evm1.5 in Isabelle/HOL

2017-08-04  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle:
	implemented ecdsa recover wrapper for OCaml

	* metropolis: fixed odd-length hex in vm test fillers
	added a YP PR where address collision should throw

2017-08-03  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: saw a K tutorial video

	* bamboo: sketched the Bamboo semantics

2017-08-02  Yoichi Hirai  <yoichi@ethereum.org>

	* ../bamboo/doc/semantics.md:
	started writing the semantics of Bamboo

	* constantinople: saw that the zeroSig transaction cannot be filled during --fillchain

	* cpp-ethereum: worked more on splitting Metropolis
	reviewed something in evmjit

	* comm: started thinking about the talk later in this month.
	"what I think about what KEVM people think about EVM"

	* bamboo: wrote a tutorial.

2017-08-01  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: add KEVM whitepaper to the awesome list

	* bamboo: got it on opam
	will write a nice tutorial starting from installation.

	* cpp-ethereum: splitting Metropolis into Byzantium and Constantinople

2017-07-31  Yoichi Hirai  <yoichi@ethereum.org>

	* private: took a day off

2017-07-28  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: searched for javascript RPC methods useful for investigating address3.  didn't find anything.

	* comm: added porosity to Awesome EVM list

	* ../bamboo/src/codegen/codegen.ml (codegen_send_exp):
	changed the executable from bbo into bamboo
	prepared for opam release
	renamed end-to-end into endToEnd, following the OCaml convention

2017-07-27  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: filed and merged some 11 PRs.

2017-07-26  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle:
	rebased my two PRs on top of seed's contribution

	* bamboo: deployed the ERC20 token on ropsten, announced.
	type-check the returned expressions
	generate --abi

2017-07-25  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: implemented events.
	Fixed issue 11.

	* metropolis: saw the pairing checker EIP fixed
	changed YP PR accordingly
	ethereum/tests, applied some new gas formula for modexp

2017-07-24  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: implemented mapping of mappings
	started implementing the events

	* cpp-ethereum: polishing my PR about smaller headers
	implemented the new modexp gas cost

	* yellowpaper: implemented the new modexp gas formula

	* metropolis: tried the new tests on go-ethereum and saw some failures.

2017-07-21  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: finished tests and debugging of payment channel.

	* cpp-ethereum: implemented test_rawSign

2017-07-20  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: finished the implementation of a payment channel
	but testing require some raw ecdsa signature method.

	* cpp-ethereum: finished implementation of EIP386
	tried templight to see the template instantiations, but got not much ideas
	filed a pull-request making header files smaller.

	* ../bamboo/src/exec/collision.ml (names): played around finding 32-bit collisions on function signature hashes

2017-07-19  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity: reviewed and merged many PRs

	* bamboo: add iszero

	* metropolis: filled tests for EIP386

2017-07-18  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis: automated the filling of failing blockchain tests
	waiting

	* cpp-ethereum: trying to speed up the build

	* ../bamboo/src/exec/end-to-end.ml (testing_010.both): implemented && for bamboo with shortcuts
	Implemented keccak256(a,b,c)

2017-07-17  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum:
	cpp-ethereum:develop and tests:develop were not working together, so fixed them.
	added EIP658 to Metropolis meta EIP
	added EIP658 to EIPs README, accepted EIP list

	* ../bamboo/src/exec/end-to-end.ml (test_rewindToBlock): successfully called ecdsarecover in a nontrivial way
	had to fix calldata offsets.
	added type checking for arguments.

	* ../yellowpaper/Paper.tex (subsection{State \& Nonce Validation}\label{sec:statenoncevalidation}):
	Implemented EIP-658 in YP.

2017-07-14  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis: tried hive locally

	* bamboo: tested ecdsarecover proxy with some random input
	implemented error for unknown type as a return type

2017-07-13  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity: discussion about calling mechanism expecting failures.

	* read: checked what is Moeser-Eyal-Sirer wallets.

	* eth-isabelle: looked at exI_pick_last_conj.  saw what it does.  I still don't understand how this is implemented.

	* metropolis: asked holiman how to reproduce hive failure.  Got an answer.  I need to try this.
	created a PR for hive: change README to use go-ethereum:master instead of go-ethereum:develop, which does not exist anymore.
	got the idea about max-code-size on go-ethereum.

	* tests: reviewed 226, created an identical PR using a branch in ethereum/tests
	rebased that on top of 222.
	rebasing two more PRs on top of 222.

	* bamboo: used cpp-ethereum unit tests to get a test case for ecdsarecover
	Somehow produced bytecode for a source containing ecdsarecover
	added uint8
	added bytes32
	thought about using 128 bit integers and perform runtime overflow detection by default.  Maybe not because I like the compiler to be small.

	* command: git branch --sort=committerdate

	* eth-isabelle: saw the behavior of exI_pick_last_conj
	it figures out the witness, using the last conjunct.

2017-07-12  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: made sure that unknown types in runtime arguments cause errors
	started working on calling ecdsarecover

	* cpp-ethereum
	reviewed 4249

	* solidity: reviewed 2364 and made another PR

2017-07-11  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: checked 4240 is not an issue anymore.

	* comm: scheduling two more calls.

	* bamboo: now the init code checks if the constructor arguments are given.  issue 45 is fixed.

2017-07-10  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: got one PR merged.

	* bamboo:
	Somehow got calling working in 00b.

	* cpp-ethereum
	got 4232 merged?
	rebased 4231
	rebased 4236
	worked on 4237: opened PR 4244
	found 4241
	found 4242

	* comm: checked typedefs.com
	checked Rosette VM
	checked roundup-round-iii
	had a call with somebody interested in eth-isabelle

	* metropolis: read cderio's summary on EIP-86 discussion.
	got tests #218 merged.
	filed a PR for another modexp test case

	* cpp-ethereum: issue 4237.
	Sometimes the state root of an account needs to be reset.
	But what happens to the backing database of state root hash --> state trie?
	Is it the case the overwritten root hash is removed from the database?

2017-07-07  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: reviewed cpp-ethereum 4232

	* bamboo: merged #40

	* metropolis: found the other difference between go-ethereum and cpp-ethereum
	raised an issue in cpp-ethereum

	working on cpp-ethereum 4228

	* comm: read "Some thoughts on blockchain governance"
	added Securify to the Awesome Ethereum Virtual Machine list
	edited the Ethereum word list a bit
	played a bit with Securify and gave some comments.

2017-07-06  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: wrote a program similar to 006 but with a named case.
	Travis build is still failing.

	* metropolis: followed the EIP 86 change in YP.

	* tests: polished some test PRs.
	Added a PR about baseLength = 2^64

	* cpp-ethereum: contract creation should result in nonce 0 or 1, opening a PR.
	Somehow got the test merged first.
	reviewed 4224 and 4229.
	Followed the change in EIP86 in cpp-ethereum

	* comm: answered somebody interested in eth-isabelle.  Proposed a schedule for a call.

	* comm: conversation with somebody who is preparing some document explaining Ethereum.

	* comm: set up the word list.
	https://github.com/pirapira/ethereum-word-list

2017-07-05  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle: noticed max code size is not implemented in block.lem

	* bamboo: trying to call a function using signature.

	* cpp-ethereum: found a bug where address collision just increments the nonce not resetting it.

2017-07-04  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum reviewed 4204

	* bamboo: now Travis runs cpp-ethereum and end-to-end.ml talks to it
	speed up Travis build by caching the compiled cpp-ethereum
	some refactoring in end-to-end.ml, separated useful utilities out of the mass
	end-to-end.ml now uses the compiler to produce the bytecode
	cached cmake

	* metropolis: added one test case about MODEXP with exp containing many zeros in front

	* dry-analyzer: implemented "next" button and "prev" button

	* comm: still some bureaucracy

2017-07-03  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: wrote about bamboo, testing yellow paper and formal verification in Q2 roundup.

	* comm: certain bureaucracy for the cambridge thing

	* cpp-ethereum: filed a few issues about testeth and testing.
	updating chain parameters for soltest

	* metropolis: slowly figuring out the test failures in go-ethereum.
	Filed one test case about RETURNDATACOPY.
	Filed an issue about cpp-ethereum returning a wrong new address to the json interface.
	Found something in Parity, staticcall.  The EIP turned out to be ambiguous.

	* ../practice/ocaml-rpc/main.ml (advance_block):
	now I can deploy and call contracts from OCaml.
	refactored advancing blocks
	Also learned how to use ppx_deriving with merlin.  Very easy.  Just listing PKG ppx_deriving in .merlin file.

	* bamboo:
	learned how to deploye and call contracts from OCaml.

	* ../tests/src/GeneralStateTestsFiller/stReturnDataTest/returndatasize_initialFiller.json:
	removed duplicate compiled code (that was in addition to the LLL code)

2017-06-30  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: trying to perform end-to-end testing
	currently figuring out how to call the json interface from ocaml

	* cpp-ethereum: found a bug in json interface that shows incorrect address after Metropolis

2017-06-29  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle added circleCI badge

	* ../practice/ocaml-rpc/main.ml (rpc_fd):
	learned how to access json rpc using ocaml.

	* eth-isabelle: fixed Coq build
	also added the coq build to Circle CI.

	* eth-isabelle: trying out Circle CI.
	2 hours limit is nice.

	* metropolis: created one test case

	* comm: created Awesome Ethereum Virtual Machine list

	* bamboo: added Travis CI
	tried ocaml-rpc for end-to-end testing
	https://github.com/pirapira/practice/commit/ebeaac513ae0497c74467a8e45737c607f42a300

2017-06-27  Yoichi Hirai  <yoichi@ethereum.org>

	* ../bamboo/src/ast/syntax.ml (lookup_usual_case_in_single_contract.): fixed a bunch of bugs.
	wrote a blog post https://medium.com/@pirapira/bamboo-compiler-started-producing-evm-bytecode-6a55e4633de9

	* ../bamboo/src/parse/examples/00d_auction.bbo:
	created a gitter room for bamboo

	* ../bamboo/src/codegen/codegen.ml (prepare_function_signature.ce):
	can generate code for all examples I prepared.
	Should I call on the community first, or shall I test the code first?
	I think I should test the code and then call the community.

2017-06-26  Yoichi Hirai  <yoichi@ethereum.org>

	* test: added one test case about returndatacopy after a successful create

	* comm: added a link to K framework in my github repos

	* ../bamboo/src/codegen/codegen.ml (prepare_input_in_memory): changed the starting seed to one
	a tiny bit of refactoring.
	now the compiler generates bytecode for example 00a.

	* bamboo: now it can generate the bytecode for example 009.
	Added the constructor argument generation.

	* eth-isabelle: rebased my PRs on top of @seed's changes

	* cpp-ethereum: PR 4200, added a test about staticcall not inheriting the CALLVALUE
	PR 4200, fixed tests

2017-06-23  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity:
	https://github.com/ethereum/solidity/issues/2458

	* ../bamboo/src/codegen/codegen_test2.ml (_.):
	spliting layout_info and post_layout_info.  post_layout_info is only available after compiling the runtime code.

	* ../tests/src/GeneralStateTestsFiller/stReturnDataTest/returndatasize_initial_zero_readFiller.json:
	opened https://github.com/ethereum/tests/pull/194
	for Metropolis testing

	* isabelle: learnt about subst tactic

	* dry: thought about classifying abstract values somehow.

	* eth-isabelle: trying to remove the stack overflow during opam update in Travis CI
	Had a closer look at @seed's work.
	Trying to merge it as a PR.  What does Travis CI say?

	* ../bamboo/src/codegen/layoutInfo.ml (arg_locations):
	added an assertion in the argument location computation so that it does not try putting a tuple in a single storage slot.

	* ../cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp:
	cpp-ethereum 4186, still fixing the starting block of the new precompileds.

	* cpp-ethereum: closed 4148, confirmed the issue is gone.

2017-06-22  Yoichi Hirai  <yoichi@ethereum.org>

	* cpp-ethereum: testeth errors when a general state test filler contains more than one test.  Opened #4196.

	* rtags: finally trying rtags.

	* read: what is a logarithmic classifier

	* metropolis:
	read over https://github.com/ethereum/cpp-ethereum/wiki/LLL-PoC-6/04fae9e627ac84d771faddcf60098ad09230ab58

	* ../tests/src/GeneralStateTestsFiller/stRevertTest/RevertOpcodeInCreateReturnsFiller.json:
	created a test case where 'REVERT' in a contract initialization code passes some data to the creating contract.

	* metropolis: what is a good way to write init code in LLL?
	Can I use (returnlll) for this purpose?
	https://media.consensys.net/compiling-your-first-contract-in-lll-28d5a9dd2e3a
	helped.
	"(def 'returnlll (code) (return 0 (lll code 0)) )"
	So, actually, (lll) does something.
	I guess it stores the code in the memory, and returns the size of the code.

	* spurious-dragon: trying to find out how to run consensus test in parity
	cargo test --release --features ethcore/json-tests -p ethcore
	might be the way...

	* ../dry-analyzer/evm.v: solved issue 23.
	About simplifying Solidity's concatenation behavior.

	* solidity: rebased PR 1091

	* metropolis: looking at
	https://github.com/ethereum/go-ethereum/commit/9f6d8e1#diff-9726adad520ecc1ea064ef53ea8a18d0R40

	* eth-isabelle: ecdsarecover might be found in
	https://github.com/nickgian/ECC-OCaml
	how to test this? or this.
	https://github.com/dakk/secp256k1-ml
	Then, some test cases need to be extracted from: ~/src/secp256k1/src/modules/recovery/tests_impl.h

	* comm: answered an email about a contract analysis tool

2017-06-21  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle: realized that blockchaintests requires ecdsarecover in the implementations.
	This means, I need an OCaml implementation of ecdsarecover for eth-isabelle.

	* comm: something about Parity
	https://github.com/paritytech/parity/pull/4851/files#r123271715

	* ../yellowpaper/Paper.tex (subsubsection{Exceptional Halting}): Added Nick's exception in the returndata branch

	* cpp-ethereum: 2275 was already fixed.

	* ../dry-analyzer/evm.v: added stack overflow checking

	* metropolis: testeth should not accept odd-length hex strings as byte sequences

	* cpp-ethereum: genesis directory, in some files,
	snark related precompiles are mentioned but not modexp

2017-06-20  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle: made some progress parsing blockchaintest
	made a fix: gas price is not in the block but in the transaction

	* cpp-ethereum: issue 4156  a wrong test case name
	reproduce.
	see the link by winsvega in the issue
	think

	* cpp-ethereum: something looked wrong in the call gas computation but it was fine.

2017-06-19  Yoichi Hirai  <yoichi@ethereum.org>

	* eip: eip619 looked ok

	* reading eip 218

	* metropolis:
	updating ethereum/tests wiki with @winsvega

	* ../cpp-ethereum/doc/generating_tests.rst: got this merged

	* cpp-ethereum: tried a few things to fix Travis build but in vain

2017-06-16  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: finished some paper review

	* cpp-ethereum: noticed all Travis builds fail

	* evm1.5: opened some pull-requests on
	https://github.com/ethereum/EIPs/blob/2eddd9668e9520479c3ed3e9ed67368a2cf29329/EIPS/eip-615.md

	* cpp-ethereum: opened #4155.

	* ../../review.sig.txt: finished the review.

2017-06-15  Yoichi Hirai  <yoichi@ethereum.org>

	* evm1.5: reading
	https://github.com/ethereum/EIPs/blob/2eddd9668e9520479c3ed3e9ed67368a2cf29329/EIPS/eip-615.md

	* cpp-ethereum:
	opened https://github.com/ethereum/cpp-ethereum/pull/4151
	found https://github.com/ethereum/cpp-ethereum/issues/4148
	started fixing cpp-ethereum #4091, adding error for testeth with misspelt options

	* ../cpp-ethereum/doc/generating_tests.rst:
	Some final touches.

2017-06-14  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis: obtained an access to a remote server
	trying to fill blockchaintests there.

	* solidity: reviewed four pull-reqs

	* dry: deployed http://dry.yoichihirai.com
	Created some issues in the dry-analyzer repository.

	* comm: some paper review

	* cpp-ethereum: fixing test https://github.com/ethereum/cpp-ethereum/pull/4098

2017-06-13  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: attended the swarm summit for an hour or so.

	* metropolis:
	got solidity #2375 merged
	got solidity #2275 merged
	got cpp-ethereum #3587 merged

	* ../../howm/2016/10/2016-10-24-183147.txt: rebased an outstanding pull-request
	https://github.com/ethereum/cpp-ethereum/pull/4098

2017-06-12  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis: reviewing implementations.  Still finding differences.
	tried to import modexp test fillers into ethereum/tests, but found a problem
	found + 256 in a different location in Parity's blockhash change

	* ../solidity/liblll/Parser.cpp (parseTreeLLL): enabled macros with zero arguments

	* metropolis: tried LibFuzzer on the pairing checker
	Some progress in returndatacopy throwing exceptions

	* ../casper/casper/contracts/simple_casper.v.py: I wondered something 6 weeks ago, but it looks fine now

2017-06-09  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: scheduled preparation for the talk in september.

	* solidity: commented on issue about algebraic data type

	* casper: tried to deploy simple_casper on ropsten, but the block gas limit seems too small for the deployment

	* metropolis: the three addressing schemes in go-ethereum.

	* metropolis: discussed the pairing thing with chfast.
	EIP can be more specific about the input length.

	* solidity:
	from within the inline assembly, currently it's not possible to just peek the external (Solidity) scope.
	So, for giving a warning about variable "returndatacopy" or something, I need a workaround.
	Discussed this with chriseth.  Implemented the easy path.

	* ../cpp-ethereum/libethcore/Precompiled.cpp (namespace):
	spending some time on modexp pricer (still applying the change about counting bits)

2017-06-08  Yoichi Hirai  <yoichi@ethereum.org>

	* ../solidity/libsolidity/analysis/ReferencesResolver.cpp (visit):
	trying to push https://github.com/ethereum/solidity/pull/2275#issuecomment-307178100

	* ../bamboo/src/lib/ethereum.ml (string_keccak): switched the hash function.

	* ../eth-isabelle/lem/evm.lem: removing annotation.

	* env: changed driver for the graphics card
	https://ubuntuforums.org/showthread.php?t=2220588

	* ../parity/ethcore/src/evm/interpreter/mod.rs: pointed out one thing in a private channel.

	* env: setting up Racer

	* env: somehow fixed NetworkManager configuration
	https://askubuntu.com/a/882812/462472

	* tool: deploying the casper contract on ropsten somehow.

	* metropolis: modexp calculation, cleaned up too many commits
	changed RETURNDATACOPY so that it throws on buffer overrun
	Also changed the tests for REUTRNDATACOPY

2017-06-07  Yoichi Hirai  <yoichi@ethereum.org>

	* comm:
	Two phone calls.  Sent a letter to Munich.

	* eth-isabelle:
	Fixed AlwaysFail.thy
	Trying to parse blockchain tests

	* metropolis:
	getting the new version of modexp calculation ready

2017-06-06  Yoichi Hirai  <yoichi@ethereum.org>

	* ../cpp-ethereum/doc/generating_tests.rst: still documenting testeth somehow.

	* ../cpp-ethereum/libethcore/Precompiled.cpp (namespace):
	implementing a new gas cost calculation for modexp
	Seems done, but need to add more tests.

	* holiday: yesterday (Monday) was a holiday around here.

	* comm: uploaded my slides I prepared for the talk in Munich

	* metropolis: reviewed some improvements for the BLOCKHASH EIP.
	YP about bigint_modexp: now looks fine.

2017-06-02  Yoichi Hirai  <yoichi@ethereum.org>

	* comm:	visitors from Japan
	allcoredev meeting
	Somehow the day was gone after these two.

2017-06-01  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: visiting Munich

2017-05-30  Yoichi Hirai  <yoichi@ethereum.org>

	* ../paper-formal-bytecode/munich/munich2017.tex (subsection{Tools}):
	still preparing slides.

2017-05-29  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: started writing a blog post about Metropolis

	* ../paper-formal-bytecode/munich/munich2017.tex (subsection{Tools}): preparing slides

	* metropolis: trying to figure out what needs to happen before test is merged into develop
	cpp-ethereum needs to be merged.

2017-05-26  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: still preparing for the talk.  Printed the slides and marking fixes.

	* metropolis: wrote a blog post about testing
	https://medium.com/@pirapira/what-happens-when-metropolis-eips-change-41ad2e9bde78

	* testesh: need to learn about restructured text
	cleaning up cpp-ethereum/doc

	* metropolis: modexp EIP gas change had some problems.
	Pointed them out and fixed them on my YP pull-request.

2017-05-24  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis:
	fixing compilation of snark branch on Mac

	* ../yellowpaper/Paper.tex (section{Precompiled Contracts}\label{app:precompiled}):
	Updated the yellow paper for the new gas costs for bigint

	* comm: more talk preparation

	* metropolis: continued shortening test names.

2017-05-23  Yoichi Hirai  <yoichi@ethereum.org>

	* ../cpp-ethereum/libdevcrypto/LibSnark.cpp: some review and refinements on snark

	* wasm: saw the pldi paper about wasm
	Maybe somebody will code it in Isabelle or something.

	* comm: preparing for a talk, filling slides

	* metropolis: some adjustments in the tests for elliptic curves (shorten file names)
	adjust test names to file names
	split files so that one file contains only one test case

2017-05-22  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: had a talk with some tool developers about remix

	* metropolis: having difficulty generating BlockChainTests.  Dimitry is helping me with some powerful machines.  I need to learn these tricks.
	updated the cpp-ethereum branch for the libsnark.  This revealed problems in Windows.  chfast is on Windows debugging this.  I need to learn these tricks too.

	* eth-isabelle: identified next steps for the blockchain tests

	* ../cpp-ethereum/libethashseal/genesis/metropolisTest.cpp: integrating the snark tests into the cpp branch

2017-05-19  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis: raised many points in the allcoredev meeting
	used pyethereum test fillers to populate more ec tests

	* comm: preparing for a talk in 10 days...

	* ../cpp-ethereum/libethcore/SealEngine.h (dev): started debugging the zksnark test
	the new precompiled contracts are not found
	There was a } missing in a JSON document in a string literal.

2017-05-18  Yoichi Hirai  <yoichi@ethereum.org>

	* ../tests/src/GeneralStateTestsFiller/stZeroKnowledge/pointMulAddFiller.json:
	trying the zero knowledge tests with the cpp-ethereum:snark but the tests fail

	* ../../.globalrc (common): trying
	https://github.com/leoliu/ggtags/issues/83#issuecomment-66670022

	* ../yellowpaper/Paper.tex (subsection{Instruction Set}): EIP96 is implemented in the yellow paper.

2017-05-17  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: preparing a summary for a talk in September

	* metropolis:
	added some test cases for RETURNDATACOPY and RETURNDATASIZE
	also made a suggestion about freezing EIPs:
	https://github.com/ethereum/pm/issues/14#issuecomment-302113189

2017-05-16  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis:
	adding RETURNDATACOPY and RETURNDATASIZE to LLL
	adding RETURNDATA* tests---still in progress
	noticed solidity:develop test does not work with cpp-ethereum:develop test

2017-05-15  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: many meetings
	A researcher from ETH Zuerich.
	Test meeting with Dimitry and Martin Swende
	skipped Casper meeting
	Somebody from Japan

2017-05-12  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis: started writing tests
	https://github.com/ethereum/tests/wiki/Creating-a-GeneralStateTest-(Yoichi's-attempt,-rough-record)
	That took almost the whole day.

2017-05-11  Yoichi Hirai  <yoichi@ethereum.org>

	* read: statebox.org might be useful or not...
	I guess there is more going on than what's visible online.

	* metropolis: leaving some comments in go-ethereum

	* ../cpp-ethereum/libethereum/State.cpp (createAccount): what now.
	I suspect that we have not implemented EIP 161a.  Where the newly created contracts have nonce one.  How to see that.  Maybe I look at the blockchain tests.

	* comm: considering if ProVerif can be a language for Ethereum contracts.
	I thought the focus is a bit different, but everything in Horn clauses, sounds nice.
	I'll continue to think about everything being Horn clauses.

	* verification: reading the Boogie documentation

	* solidity: review PR 2261 about optimization

	* metropolis: said something on cpp-ethereum: REVERT during CREATE should leave RETURNDATA

	* comm: structuring the coming talk

	* ../yellowpaper/Paper.tex (section{Signing Transactions}\label{app:signing}):
	Fixed one mistake in my YP PR 282

2017-05-10  Yoichi Hirai  <yoichi@ethereum.org>

	* ../yellowpaper/Paper.tex (subsection{Execution}): somehow reviewing my own YP PRs
	I was also reviewing my own PRs on YP.  Mostly removing spurious white spaces.
	Sometimes a duplicate condition.  Also I was adding dependencies of PRs.
	"This PR only makes sense after that PR."

	* metropolis: what kind of transaction should increment nonces.
	On yellow paper PR 277

	* comm: proper brainstorming on the coming talk

	* metropolis: noticed that, now contract creation also needs to return output data
	https://github.com/ethereum/yellowpaper/pull/278#issuecomment-300422518
	This means some more time on YP changes.

	* comm: wrote a blog post on a whim.  It became surprisingly popular.
	https://medium.com/@pirapira/what-i-do-for-ethereum-when-im-not-writing-blogs-558bda344b8

2017-05-09  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis: learned about the new salt argument in CREATE2.  Reflecting that onto the yellow paper.

	* ../cpp-ethereum/libethereum/BlockChain.cpp (insert): OK, at least the receiptsRoot is checked here.

	* ../cpp-ethereum/libethereum/BlockQueue.cpp (verifierBody): this might be where blocks are verified

	* ../cpp-ethereum/libethcore/BlockHeader.cpp (clear): BlockHeader:verify() does not check the receipts root

	* ../cpp-ethereum/libethcore/BlockHeader.h (dev): The value 'CheckEverything' seems relevant.
	(dev): the function 'verify()' looks very relevant.

	* ../cpp-ethereum/libethereum/BlockQueue.h: this looks also relevant.

	* cpp-ethereum: and then, I need to look how cpp-ethereum deals with incoming blocks.
	BlockchainSync class sounds relevant.

	* metropolis: cpp-ethereum 4035 about medstate removal

	* ../cryptokit/src/stubs-sha3.c: updated my cryptokit PR.

	* comm: submit camera ready version of the Malta paper

	* comm: travel organization for the coming talk, and scheduling the time for preparation

	* solidity: reviewed 2247

2017-05-08  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: preparing for a coming talk.

	* eth-isabelle: checking https://github.com/mrsmkl/eth-isabelle/blob/master/lem/evm.lem#L1344
	This makes more sense than what is currently written in the yellow paper, but what does the tests say?
	Why didn't we come up with this kind of issues when we were discussing the EIPs?

	* comm: reading up chat channels

	* comm: answering a Reddit thread about formal verification. https://www.reddit.com/r/ethereum/comments/69rroh/what_is_going_on_with_formal_verification/

2017-04-28  Yoichi Hirai  <yoichi@ethereum.org>

	* ../../howm/2017/04/2017-04-28-125159.txt: inria-prosecco/acme-model

	* yellowpaper: what does it say about CREATING, overwriting an existing contract

	* eth-isabelle: separated out a library for traversing directories

	* yellowpaper: filed a PR to clarify the case SELFDESTRUCT tries to send fund to itself

	* bamboo: filed a PR to cryptokit adding back the original Keccak submission
	https://github.com/xavierleroy/cryptokit/pull/2

2017-04-26  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle: fixing the broken proof of call_gas_triple

	* comm: reviewing something

	* solidity:
	clearning up wiki

	* comm: preparing a blog post of pending projects

	* comm: reading Greg's SIMD EIP

	* ../eth-isabelle/tester/blockchainTestParser.ml (format_test_case): wrote a parser for blockchain tests

2017-04-25  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle: added protocol version as an argument to many functions

	* yellowpaper: updated frontier branch of Yellow Paper and filed a pull-request
	fixed PR 282 about the value passed on to ECDSARECOVER function

	* casper: understood what Reed-Solomon coding is
	got some idea how erasure coding might be useful

	* metropolis: reviewed the difficulty change in go-ethereum, and made a comment
	https://github.com/ethereum/go-ethereum/pull/14337#discussion_r113196138
	discussion on eip 214
	reviewed REVERT in cpp-ethereum
	found small problems in the difficulty change in go-ethereum

	* ../eth-isabelle/lem/evm.lem: using network not the blocknumber to change protocol rules.

2017-04-24  Yoichi Hirai  <yoichi@ethereum.org>

	* evm: started adding the network argument to the EVM definitions

	* yellowpaper: #282
	I was not aware that the ECDSARECOVER is also changed.

	* ../yellowpaper/Paper.tex: updated EIP86 so that CREATE instruction keeps the original address computation

	* casper: https://github.com/ethereum/research/wiki/A-note-on-data-availability-and-erasure-coding
	I haven't understood why erasure code helps.  What would it look like without erasure code?

	* yellowpaper: change the PR about bigint arithmetics, to reflect recent address scheme change

	* comm: talk in amsterdam checking my profile.

2017-04-21  Yoichi Hirai  <yoichi@ethereum.org>

	* casper: https://medium.com/@VitalikButerin/parametrizing-casper-the-decentralization-finality-time-overhead-tradeoff-3f2011672735

	* travis: trying out https://github.com/travis-ci/travis.rb

	* solidity: rebasing #1091
	reviewed some, including the Julia grammar

	* metropolis: proposed some points for the allcoredev meeting

2017-04-20  Yoichi Hirai  <yoichi@ethereum.org>

	* casper: submitted issues #7, #8 and a PR #6
	problem in bitmask operations, setting some bits cleared others
	two kinds of division by zero

	* eth-isabelle: debug a nonce difference
	debug 1/64th in CREATE
	started using Trusty in Eth-isabelle
	found issue #397, balance is somehow different

	* yellowpaper: Does it specify the number of elements in the transaction RLP?
	gas usage of CALL was wrong
	after CREATE, 1/64th was not added back again
	the sum of used gas did not consider refunds, though many clients did

2017-04-19  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity: reviewed some PRs.

	* metropolis: pointing out differences about eip86.

	* casper: viper did not work on python2.7
	util.py had a type error
	python 3.5 also has a problem.  Maybe the easiest way is to upgrade ubuntu versions.

	* ../eth-isabelle/tester/stateTestLib.ml (run_test): fixed the stack overflow problem.
	Found the next problem.

2017-04-18  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: better description of blockhash instruction

	* cpp-ethereum: gasLimit representation.... do we need to change tests for refactoring.

	* metropolis: eip86, found some discrepancy between cpp-ethereum and parity

	* solidity: Julia discussion about some syntax

	* ../eth-isabelle/lem/evm.lem: fixing a stack overflow

2017-04-13  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis: started reading up client changes

	* eWASM: reading a bit about wasm and ewasm

	* ../yellowpaper/Paper.tex: described the zkSNARK related precompiled contracts.  This took me 5 hours.

2017-04-12  Yoichi Hirai  <yoichi@ethereum.org>

	* metropolis: trying to list corner cases of Metropolis changes

	* solidity: reviewed 2117

	* comm: submitted the title and the summary of my talk in Amsterdam

2017-04-11  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle/script/gen_coq.sh: created a script for generating coq tar ball

	* ../paper-formal-bytecode/main.tex: uploaded my paper I presented in malta

	* yellow paper: rephrased 161.c without the special \rho function
	also created a PR for eip 170

	* comm: preparing bitcoin wednessday talk
	need to take a photo.

2017-04-10  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: commented on paper draft sent from people I got to know in Malta.

	* comm: wrote a blog post about Malta conference
	https://medium.com/@pirapira/fc-2017-report-is-there-mechanism-designer-aboard-b3160c7ff826

2017-03-31  Yoichi Hirai  <yoichi@ethereum.org>

	* ../paper-formal-bytecode/talk/malta2017.tex (Ongoing): slides

	* ../yellowpaper/Paper.tex: fixed yellow paper PR 270

2017-03-30  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: discussion with Gavin

	* malta: slides, drawiing pictures

2017-03-29  Yoichi Hirai  <yoichi@ethereum.org>

	* malta: reading abstracts and choosing which one is interesting

	* eth-isabelle: fixed Travis about the state test

	* yellow paper: opened PR for EIP 140

2017-03-28  Yoichi Hirai  <yoichi@ethereum.org>

	* malta: creating malta slides

	* yellowpaper: creating metropolis PRs

	* eth-isabelle: specified LOGx as Hoare triples
	doing some house cleaning

2017-03-27  Yoichi Hirai  <yoichi@ethereum.org>

	* yellow paper: opened a PR again about the account abstraction changes

	* solidity: #1711, to desguaring process

	* malta: filled in many slides with bullet points

	* eth-isabelle: specified two instructions

2017-03-24  Yoichi Hirai  <yoichi@ethereum.org>

	* klee: found that ethevm does run cleanly on develop

	* solidity: reviewing #1711: found that control flow is not accounted in the assembly analyzer
	don't come up with a good justification.

	* malta: created slide titles somehow
	maybe needs some reshuffling, so first fill them in with tentative bullet points.

2017-03-23  Yoichi Hirai  <yoichi@ethereum.org>

	* klee: trying Klee on evm
	somehow built klee

	* ../yellowpaper/Paper.tex: https://github.com/ethereum/yellowpaper/pull/270
	changed fonts

	* klee: https://docs.docker.com/engine/installation/linux/ubuntu/#install-using-the-repository
	$ sudo docker run hello-world

	* solidity: reviewing #1711.  would take months to understand this one.  Asking if I should continue.

	* ../yellowpaper/Paper.tex: more Metropolis changes

2017-03-22  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle: hearing that state tests run.  very curious.

	* ../yellowpaper/Paper.tex: https://github.com/ethereum/yellowpaper/pull/268
	and #267

	* env: trying to introduce zsh

2017-03-21  Yoichi Hirai  <yoichi@ethereum.org>

	* ../yellowpaper/Paper.tex:
	https://github.com/ethereum/yellowpaper/pull/263

	* pos: removed 'smt' methods that might and might not work on other machines

	* pos: reorder definitions and lemmata in the dynamic validators proof

2017-03-20  Yoichi Hirai  <yoichi@ethereum.org>

	* pos: fixed the dynamic validators proof

	* eth-isabelle: merged two pull-requests
	fixed a problem in vm test

2017-03-17  Yoichi Hirai  <yoichi@ethereum.org>

	* ../pos/document/root.tex: verifying dynamic validator set

2017-03-16  Yoichi Hirai  <yoichi@ethereum.org>

	* pos: reduced the dynamic validator setting into
	a smaller situation where only one validator set is
	relevant.

2017-03-15  Yoichi Hirai  <yoichi@ethereum.org>

	* pos: first attempt to formalize dynamic validators
	got my misunderstanding.  Trying again.

2017-03-14  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: had a meeting

	* pos: talked with Meredith

2017-03-13  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: guests

	* pos: defined the number of validator set changes

2017-03-10  Yoichi Hirai  <yoichi@ethereum.org>

	* pos: trying to model the dynamic validator sets in Isabelle

	* eth-isabelle: ISZERO specified as Hoare triple

2017-03-09  Yoichi Hirai  <yoichi@ethereum.org>

	* pos: wrote a blog about Vlad's Casper

	* pos: started the dynamic validator setting

2017-03-08  Yoichi Hirai  <yoichi@ethereum.org>

	* pos: finished the consensus safety proof

	* yellowpaper: filed more PRs about Metropolis

	* solidity: reviewed and merged some PRs

2017-03-07  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: filed two PRs about Metropolis

	* pos: fixed a definition in the cbc-casper

2017-03-02  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle: Finished fixing the Deed proof for the WTSC conference

	* yellowpaper: opened two PRs about Metropolis

	* pos: https://github.com/pirapira/cbc_casper with Vlad Zamir

2017-03-01  Yoichi Hirai  <yoichi@ethereum.org>

	* ../yellowpaper/Paper.tex: EIP86 in yellow paper

	* pos: started formalizing another PoS

2017-02-28  Yoichi Hirai  <yoichi@ethereum.org>

	* ../yellowpaper/Paper.tex: preparing eip86 changes
	fixing my PR about Sprious Dragon
	some discussion around the "hack" for fixing consensus

	* solidity: some discussion around assembly
	maybe we do not need labels with stack adjustments

2017-02-27  Yoichi Hirai  <yoichi@ethereum.org>

	* pos: joined casper call
	refactoring proofs

	* solidity: discussion with chriseth about an intermediate language

2017-02-26  Yoichi Hirai  <yoichi@ethereum.org>

	* comm, pos: wrote a blog post

2017-02-22  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: filing some PRs for Metropolis

	* pos: using Isabelle/HOL and Alloy to investigate the Minimal Tendermint protocol

2017-02-17  Yoichi Hirai  <yoichi@ethereum.org>

	* comm:
	gave a talk at a conference in Paris
	https://yoichihirai.com/edcon-yoichi-hirai.pdf

2017-02-14  Yoichi Hirai  <yoichi@ethereum.org>

	* EIPs:
	reviewed some EIPs

	* Solidity:
	reviewed one PR

2017-02-13  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle:
	testing the proven simple wallet
	out-of-gas happened.
	so fixed the program.
	Now I'm aware how to deal with commutative monoid of **.
	however, when I introduce that, I have lots of broken proofs.
	So I keep it as a WIP pull request.

	* yellowpaper:
	rebased one of my PRs.  asked the next steps.

2017-02-12  Yoichi Hirai  <yoichi@ethereum.org>

	* comm:
	went to the Tokyo Hackathon

	* eth-isabelle:
	have been specifying instructions as Hoare triples,
	verified a simple wallet
	about to test it.

2017-01-20  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle:
	Specifying JUMP and JUMPI
	Also trying some Travis optimizations

	* ../cpp-ethereum/libethcore/SealEngine.cpp:
	The gas-table update in Solidity requires some change in cpp-ethereum

2017-01-19  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity: not yet succeeded in changing the gas schedule

	* eth-isabelle: specified JUMPDEST as a Hoare triple
	specifying JUMPDEST was a bit harder than others.
	Maybe because so many things don't change.

	* ../holzero-0.6.3/src/type.ml (Type):
	maybe we do not need DLTree in EVM (if we can use the storage)

	* proofmarket: HOL Light and HOL Zero, compare the size of the proof checker.
	Somehow HOL Zero is more well-documented.

2017-01-18  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: listed missing texts and pictures for the japan talk.

	* eth-isabelle: specified CALLER and BALANCE
	Current proofs are fragile.
	For proving "rest a ==> rest b", I state a
	lemma "a = b", but "a" and "b" change frequently.
	Maybe I should try to hide these "a" and "b" from
	the proof script.

2017-01-17  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity: reflecting gas price changes

	* eth-isabelle: wrote a blog post

2017-01-16  Yoichi Hirai  <yoichi@ethereum.org>

	* presentations:
	I think I stick with Keynote on Mac.
	Maybe I should create a repository somewhere.

	* eth-isabelle:
	Trying to use the Hoare logic.
	The rules are presented sometimes inconveniently for backward proofs.

2017-01-13  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle:
	removing invalid SWAP instruction

2017-01-12  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper: performed some cleanup on issues

	* comm: had a call

	* eth-isabelle: introduced Travis
	enabled HOL extraction
	found an issue with test performance, submitted a fix
	Streamlined the ADD triple

	* eth-isabelle: specifying more and more instructions as Hoare triples

2017-01-10  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle/lem/evm.lem:
	In Lem, SUICIDE (self) looks like the balance becomes zero.

	* ../cpp-ethereum/libethereum/ExtVM.cpp (suicide):
	In C++, SUICIDE (self) looks like the balance becomes zero

	* ../../howm/2017/01/2017-01-10-122201.txt: started discussion with chriseth about templates.
	I insist having the smallest bite possible

2017-01-09  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle:
	What does the yellow paper say about SUICIDE and send fund to itself?

	* eth-isabell: Now building Hoare logic, following Magnus Myreen's thesis.
	I had to change some of the formalism, but hopefully not too serious.
	Somehow finished proving the triple validity for ADD and the composition rule.

2017-01-06  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle ran VM tests with coverage recording
	and preparing a paper

	* ../../howm/2017/01/2017-01-05-153938.txt (https): preparing for talks

2017-01-05  Yoichi Hirai  <yoichi@ethereum.org>

	* ../solidity/libevmasm/AssemblyItem.h (dev): reviewed #1330

2017-01-04  Yoichi Hirai  <yoichi@ethereum.org>

	* read: Concrete Semantics section 12.4  Verification Condition Generation
	I think the EVM work needs to get there somehow.

	* solidity: reading #1330

	* solidity: #1247, I will update the table without adding version selection
	There is a file called GasEstimator.h
	GasMeter.h has the constants.

	* solidity: rebaing my own PR, etc

	* eth-isabelle added LOG instructions
	Thinking how to release the first version.
	Tagged a revision and tested it.

2017-01-03  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper:
	how does the yellow paper describe the log?
	t is the list of topics
	So (address * word list * byte list) should be it?
	Yes, the vm test looks like that.

2017-01-02  Yoichi Hirai  <yoichi@ethereum.org>

	* ../../howm/2017/01/2017-01-02-100225.txt: The spec of wasm is here in OCaml
	https://github.com/WebAssembly/spec/tree/master/interpreter
	I should start turning this into Lem

	* read: https://medium.com/@VitalikButerin/a-proof-of-stake-design-philosophy-506585978d51#.7szispkiw
	I like this post for the cyberpunk reference.

	* ../../howm/2017/01/2017-01-02-100225.txt:
	Over the Christmas season, I was testing the formal model of EVM against the VM test suite.
	All instructions are complete.

	* ewasm: it seems like Hera uses an existing engine for WASM.
	So might be a better idea to formalize WASM as it is.

2016-12-23  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle/tester/jsonparser.ml (construct_block_info):
	has been running VM tests on the EVM definition in Lem

2016-12-21  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle/lem/evm.lem: running VMTests on the EVM defined in Lem
	finding some errors

2016-12-19  Yoichi Hirai  <yoichi@ethereum.org>

	* ../ethereum-formal-verification-overfiew/README.md: updated.

	* eth-isabelle:
	still writing paper
	somehow executed EVM translated from Lem

2016-12-18  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabell: wrote a hex code parser in OCaml, for parsing vmTesting

2016-12-16  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle/tester/evmTest.ml (big_int_of_word160):
	now converting numbers to the format used in the EVM model

	* ../eth-isabelle/tester/jsonTest.ml (parse_env):
	mostly finished parsing vm test formats

2016-12-15  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle/lem/word8.ml: extracted OCaml code from the Lem code
	Now thinking how to bridge json test cases to this world.
	I guess bypassing Big_int is the way to go.
	Another thing to consider is how to see this file.
	Maybe an OCaml_project file at the top?
	(_tags file did it for ocamlbuild)
	Fixed some Lem notations so that the OCaml translation compiles.

2016-12-14  Yoichi Hirai  <yoichi@ethereum.org>

	* https://realworldocaml.org/v1/en/html/handling-json-data.html:
	This is cool:
	(* Locally open the JSON manipulation functions *)
	let open Yojson.Basic.Util in


2016-12-12  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity: rebased #1474

	* eth-isabelle: 4-days delay from the plan.  feeling the pinch.
	Last week I spent only 3 hours on this.  Maybe that's why.

2016-12-10  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle:
	added gas checking, now the proof checking takes overnight
	the gas decrement is not there yet.

2016-12-09  Yoichi Hirai  <yoichi@ethereum.org>

	* assembly:
	I was reviewing Chriseth's proposal.  I started writing my own
	https://docs.google.com/a/ethereum.org/document/d/1a31R9uFnQffFr4zHPf-kQk8EzXv5uXtuX01_awGiE44/edit?usp=sharing

	* ../yellowpaper/Paper.tex: created a PR about the Spurious Dragon changes

2016-12-05  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity: trying to debug the Mac test failure

	* ../yellowpaper/Paper.tex: specifying Spurious Dragon in the yellow paper

	* eth-isabelle:
	I chose not to model the sets of instructions Wzero, Wbase, Wverylow, Wlow, Wmid, Whigh, Wextcode in the yellow paper

2016-12-02  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity: most derived contract matters even when evaluating the function calls in the base contracts.

	* ../eth-isabelle2/lem/evm.lem: defined Csuicide and some other aux functions for gas

2016-12-01  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle: make works

	* ../solidity/test/libsolidity/SolidityNameAndTypeResolution.cpp (dev):
	I'm trying to work on
	for the test cyclic_inheritance, shall I
	1) exit after the first fatal error, or
	2) inhibit one of the errors?

	* clang-analyzer:
	trying clang-analyzer on solidity
	in solidity and in cpp-ethereum, exposed some issues

2016-11-30  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity: mainly modifying my own pull-requests

	* cpp-ethereum: one test crashes as reported by @chfast

2016-11-28  Yoichi Hirai  <yoichi@ethereum.org>

	* env: I took two days off and moved from Dresden to Berlin

2016-11-25  Yoichi Hirai  <yoichi@ethereum.org>

	* swirlds:
	if we replace the number of nodes with the amount of funds, what would happen?

2016-11-23  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity
	Changing the way checks are written in the tests.

	* eth-isabelle
	The stack depth check increased the number of cases.
	Somehow I can cope with it?
	Still trying to fix Deed.

2016-11-22  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle/lem/evm.lem:
	The stack depth should be checked before the execution of the instruction.
	This means I need a table of stack element consumption and production.

	* evm-verif:
	added `make doc`

	* comm: introduced to two different smart contract languages.

	* evm-verif: what kind of formally verified contract shall I deploy and put a bounty?
	Some theorem about the bit sequence?
	no, no owner can withdraw everything.
	The daily-user can withdraw 5% per day.
	The owner can change the daily-user.
	I think I should not publish the Solidity code for this, because people assume that the Solidity code is verified to be correct, which will not be the case.
	The time line for this is before my demo day.

	* solidity: #527 shifts

	* env: setting up irony-mode
	company-irony
	irony-eldoc

	* read: http://research.microsoft.com/en-us/um/people/nick/coqasm.pdf
	ifthenelse and while are macros
	created #68 and #69 in eth-isabelle repository.

2016-11-21  Yoichi Hirai  <yoichi@ethereum.org>

	* ../solidity/test/libsolidity/SolidityNameAndTypeResolution.cpp:
	spent some more time on #1392
	learned Boost exceptions the hard way

	* env:
	I've set up flycheck working.  productivity++.

	* ../solidity/libsolidity/codegen/CompilerUtils.cpp (dev):
	worked whole day on #1381

2016-11-20  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle:
	somehow finished the porting to Lem.

2016-11-18  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle:
	spent almost the whole day on porting the definitions to Lem and then fixing the proofs on the ported definitions.

2016-11-17  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle/lem/evm.lem:
	In some places the Lem definition interpreted 256-bit words as signed integers.
	And some old bugs in the definitions were still there.
	The symptom was that the proofs finished too early.

	* eth-isabelle:
	checking warning contents.

2016-11-16  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle:
	mostly integrating Lem files
	I had to replace many `abbreviation`s in the original Isabelle/HOL source with `declare ... [simp]`s.

	* comm:
	several people contacted me with research projects.

2016-11-15  Yoichi Hirai  <yoichi@ethereum.org>

	* swarm: how does the incentive work?

	* eip: 155, 158, 160, 170

	* read: https://github.com/rmerom/PutYourMoneyWhereYourContractIs
	It seems like this framework can support attacks that involve reentrancy etc.
	Bounty vs. formal verification.  Maybe bounty hunting using formal verification?

2016-11-14  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: the empty contract works somehow.
	I think this should be automatically tested.
	I should prioritize trying out these testing frameworks out there.

	* solidity: #1334 not being sure I'm going to the right direction.
	Somehow picked #1344.  Enum cleanup.

2016-11-12  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: got the first bytecode output.
	I need to test this.
	I realized that I need a counter for dynamically generating mappings.

2016-11-11  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: slowly pushing forward
	I believe it will get only easier from here.

	* evm: a paper about optimization http://set.ee/publications/bytecode07.pdf
	maybe useful within a basic block

	* solidity: added some tests for first class contracts

2016-11-10  Yoichi Hirai  <yoichi@ethereum.org>

	* ../solidity/libsolidity/parsing/Parser.cpp (dev):
	after M-., M-, goes back to the place before the search

2016-11-09  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: slowly pushing things forward
	Now generating layout info from the information available at that stage.
	Currently figuring out what information is available.

	* eth-isabelle: copying comments into Lem files

	* ../solidity/libsolidity/parsing/Parser.cpp (dev): enum conversion overflows.  #1334
	Also #1292, #1293.

2016-11-08  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle:
	added Lem files and prepared some Makefile goals

	* ../solidity/libsolidity/codegen/ContractCompiler.h (dev): figured out where the internal function tags are pushed

	* solidity: just realized that the runtime code generation has to consider the internal functions that were referenced in the constructor.

2016-11-07  Yoichi Hirai  <yoichi@ethereum.org>

	* ../solidity/libsolidity/codegen/CompilerContext.cpp (dev):
	eth::AssemblyItem CompilerContext::FunctionCompilationQueue::entryLabel()
	is the function that can lookup/create a tag for an internal function

	* eth-isabelle:
	Moving slowly to incorporate the Lem code.

	* ../solidity/libsolidity/codegen/ContractCompiler.cpp (solidity):
	I was mainly reading the solidity code down to CompilerContext.h and the dependent header files.

2016-11-04  Yoichi Hirai  <yoichi@ethereum.org>

	* ../solidity/test/libsolidity/SolidityEndToEndTest.cpp (dev):
	Adding more test cases around functions.

	* dump:
	dumped all code on the mainnet.  What shall I try with it?

2016-11-03  Yoichi Hirai  <yoichi@ethereum.org>

	* ../../contracts/0xd2e1: some contract hunting on the blockchain

	* ../solidity/solc/CommandLineInterface.cpp (dev): gdb
	catch throw

2016-11-02  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity: how to generate random Solidity programs?
	Csmith
	What papers cite csmith?
	I guess I have to write something on my own.

	* env: trying 'planner' app
	scheduled the near future of the eth-isabelle project

	* hol-testgen: https://www.brucker.ch/bibliography/download/2016/brucker.ea-hol-testgen-2016.pdf
	Maybe I can use this to produce test cases for on-chain contracts,
	or I can produce random solidity programs.

	* eth-isabelle:
	tried sledgehammer [prover="remote_waldmeister"] on some final goals, but this didn't succeed

2016-11-01  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity: still on #1292

	* comm: gave a talk at the Berlin Ethereum Meetup
	https://yoichihirai.com/deedtalk.pdf

2016-10-31  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle:
	preparing the talk on the meetup tomorrow.

	* solidity:
	Overload conflicts, wondering about several things.
	`A is B,C` is the ordering of B,C relevant or not? (turns out yes, as documented)
	should functions in B and C with the same name conflict?

2016-10-28  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle:
	realized that CALLCODE and DELEGATECALL does not follow the established invariants about the account's code.
	Somehow released the results about the Deed contract.

2016-10-27  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle:
	Somehow finished the proofs around Deed contract again.

2016-10-26  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle/ContractSem.thy: I found a bug in JUMPI
	the return data was not written to the memory.
	I'm glad I found these before I say I verified a contract.

2016-10-25  Yoichi Hirai  <yoichi@ethereum.org>

	* https://www.cs.princeton.edu/~appel/papers/controllogic.pdf
	Maybe this is useful.
	We have jumps to locations specified in the stack.
	This might be a problem.
	Maybe we propagate conditions somehow.
	Jump-destinations paired with conditions that are known to be safe.

2016-10-24  Yoichi Hirai  <yoichi@ethereum.org>

	* eth-isabelle:
	Now the Deed analysis is ready to go out.  It proves a strong enough statement.
	So the rest is PDF clanup.

	* ../solidity/Changelog.md (Bugfixes): Working on two pull-requests
	#1274 and #1264

2016-10-23  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle/document/root.tex (section{Introduction}):
	Finished proving some properties about the Deed contract.
	Now I'm working on a nice document about this.

2016-10-21  Yoichi Hirai  <yoichi@ethereum.org>

	* ../solidity/libsolidity/codegen/ExpressionCompiler.cpp (dev):
	I think I solved #1116.  PR 1263 created.

2016-10-20  Yoichi Hirai  <yoichi@ethereum.org>

	* ../solidity/libsolidity/codegen/ExpressionCompiler.cpp (dev):
	Started dealing with issue 1116.  The problem seems to be that the library is visited.

	* Isabelle/HOL
	Reading a list into an AVL tree takes about 10 mins.
	Maybe that's fine for now.
	For the future we need more optimizations.

	Learnt to search theorems by "name: if_splits"

	* ../solidity/libsolidity/parsing/Parser.cpp (dev):
	just read ASTNodeFactory

2016-10-19  Yoichi Hirai  <yoichi@ethereum.org>

	* Isabelle/HOL simplifier debugger
	https://speakerdeck.com/larsrh/interactive-simplifier-tracing-and-debugging-in-isabelle
	https://www21.in.tum.de/~hupel/pub/simp-trace.pdf
	using [[simp_trace_new mode = full]]

	The simplifier is very clever, when the right hand side looks heavier it does not consider using the equation, even when it's in the simplification database

2016-10-18  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle/example/Deed.thy:
	The simplifier spends 15 minutes for 9 instructions.  This needs to be optimized.

	* ../eth-isabelle/parser/hexparser.rb:
	Wrote a parser in ruby, whose inputs are hex codes and the outputs are in Isabelle/HOL

	* ../solidity/libsolidity/ast/AST.cpp:
	While Isabelle/HOL is simplifying terms, I have time for Solidity bugs

2016-10-17  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle/Parse.thy:
	Found that the bytecode parser in Isabelle/HOL is very slow.
	Maybe I'll rewrite once more and see if it's still slow.
	It seems like the accumulator technique is actually harmful.

2016-10-15  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle/ContractSem.thy:
	Learnt apply(simp split: if_splits)

2016-10-14  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle/RelationalSem.thy:
	Developed a hybrid of the deterministic function and some nondeterministic steps representing the world's choices.

2016-10-13  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity:
	Tried to read some of the recent pull-requests.  Created more issues.

	* ../eth-isabelle/RelationalSem.thy (step):
	I was trying to create a relational semantics, but found it painful to use.
	Maybe I'm going to define things as functions as long as the things are deterministic.

	* ../eth-isabelle/example/FailOnReentrance.thy:
	Finished all opcodes except GAS, and trying some more small programs.

2016-10-12  Yoichi Hirai  <yoichi@ethereum.org>

	* ../yellowpaper/Paper.tex (section{Fee Schedule}\label{app:fees}):
	submitted a PR about EIP150 on the yellow paper

	* env: set up pgp key on github

	* ../eth-isabelle/ContractSem.thy:
	Implementing more and more opcodes.
	Isabelle/HOL's word library makes this comfortable.

	* env: ordered an armrest
	Ergonomics is important

2016-10-11  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle (eth-isabelle):
	Now the semantics is aware that Eth balances can suddenly increase.
	Also, annotations in the bytecode is supported.  Statements on the current state can be verified.

2016-10-10  Yoichi Hirai  <yoichi@ethereum.org>

	* ../eth-isabelle/ContractSem.thy: Now the proofs in Isabelle/HOL is much shorter
	https://github.com/ethereum/solidity/issues/1178#issuecomment-252673920

	* ../evmverif/coq/ContractSem.v: finished porting the general parts of evmverif that applies to all contracts.
	During the course, found a bug in the original evmverif.

2016-10-07  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity: created a quick PR to fix #1177

	* bamboo: implementing hex generation

	* comm: discussion with @axic resulted in https://github.com/ethereum/solidity/issues/1178

	* evmverif: shortened the proof script a bit

2016-10-06  Yoichi Hirai  <yoichi@ethereum.org>

	* remark:
	The next step of the evmverif looks like
	- developing small semi-automations
	- adding program logic (I have somebody interested in this!)
	- adding more opcodes

	* ../bamboo/src/codegen/hex.mli (bamboo):
	spent some time implementing the code generation of bamboo

	* ../solidity/libsolidity/inlineasm/AsmParser.cpp (solidity):
	spent some time trying pull-requests on solidity

	* evmverif:
	streamlined proofs.  Before this, the case analysis was made along the
	if sentences in the specification.  After this, the case analysis is
	made along the conditional jumps in the EVM bytecode.

2016-10-05  Yoichi Hirai  <yoichi@ethereum.org>

	* evmverif:
	A youtube video https://www.youtube.com/playlist?list=PL9oaY6Y4QxRZybj86eGItGVApxLXVIXHz

	* plan: I think moving to Isabelle/HOL now is not the greatest choice, so
	Coq bytecoe verification (evmverif) 40%
	bamboo: long / high impact: 30%
	C++ world: 30%

2016-10-04  Yoichi Hirai  <yoichi@ethereum.org>

	* env: bought a headset so that I can shoot a video

	* ../bamboo/src/lib/ethereum.ml (bamboo):
	trying to compute ABI signatures of cases.
	Now looking at cryptokit library of OCaml.
	Some how I checked out
	svn checkout svn://ssh.ocamlcore.org/svn/cryptokit/trunk
	Yes I got it somehow working.
	remembered object#method syntax of OCaml.
	This ended up in https://github.com/pirapira/bamboo/commit/8329ee6ebfa1c6a1614b9a1c7bfec6d6b286d5a4

	* casper: sent a mail about the casper draft

2016-10-01  Yoichi Hirai  <yoichi@ethereum.org>

	* vmtrace_enricher:
	some transaction graphing tool.
	https://github.com/pirapira/vmtrace_enricher

2016-09-29  Yoichi Hirai  <yoichi@ethereum.org>

	* yellowpaper:
	opened #187

	* dr-y:
	implemented DELEGATECALL
	updated the online version

	* evm: DELEGATECALL and CALLCODE, learned the difference

	* bamboo:
	Touched bamboo compiler a bit.

	* plan: after the enricher thing, the percentage would then be
	isabelle/hol bytecoe verification 40%
	bamboo: long / high impact: 30%

	* plan:
	When I think about it, in the end, trusting solc is still a risk.
	So I need to change the focus.
	-- a. Create a youtube video how to do bytecode level verification
	   because I finished one example, and you don't know how it works.
	-- b. I'll try the same example in Isabelle/HOL
	-- c. Solidity to output annotated bytecode and then to
	   use Oyente // write a proof about that.
	   -- Easier and more trustworthy.

2016-09-28  Yoichi Hirai  <yoichi@ethereum.org>

	* comm: some discussion on gitter

	* enricher:
	https://github.com/pirapira/vmtrace_enricher
	getting in shape

	* comm: call

2016-09-27  Yoichi Hirai  <yoichi@ethereum.org>

	* plan:
	when this enricher thing finishes,
	dry: next goal is big anyway: 10%
	compare verification tools: main: 45%
	bamboo: long / high impact: 30%

	* read: http://www.lsv.ens-cachan.fr/Publis/PAPERS/PDF/DKR-csfw06.pdf
	What is "coercion resistance"

	* oyente: documented how to get it working
	https://github.com/pirapira/practice/blob/master/compare-tools/getting_oyente_working.md
	https://github.com/pirapira/practice/blob/master/compare-tools/oyente-on-ens.md

	* go-ethereum: reviewing #3045

	* comm: reviewed an article based on an interview

2016-09-26  Yoichi Hirai  <yoichi@ethereum.org>

	* plan:
	thinking how much time to spend on what project.
	enricher: short / high impact: 40%
	dry: next goal is big anyway: 2%
	compare verification tools: main: 15%
	bamboo: long / high impact: 10%

	* solidity: reported issue #1121 as well
	Just something about non-existent options.

	* solidity: reported issue #1120
	I was trying to do something else when I hit the internal compiler error.

	* read: https://uport.me/#home

	* comm: on the gitter formal verification channel, people were wondering about Oyente's internal state representation.
	created oyente#5 for division by zero

	* ../go-ethereum/core/state/state_object.go:
	was reading recent changes.

2016-09-14  Yoichi Hirai  <yoichi@ethereum.org>

	* bamboo: parser can parse a simple example

	* env: preparing for trip

2016-09-13  Yoichi Hirai  <yoichi@ethereum.org>

	* ../solidity/test/libsolidity/SolidityEndToEndTest.cpp (dev):
	picked up an issue that looked easy enough.  (minint()/(-1).

2016-09-12  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity:
	prepared a Why3 example before the talk
	also prepared some of the slides

2016-09-11  Yoichi Hirai  <yoichi@ethereum.org>

	* read: https://ethereum.karalabe.com/talks/2016-hackethon.html#21
	This is a very good talk.

2016-09-10  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity: #1053
	array of arrays.
	aliasing.

2016-09-09  Yoichi Hirai  <yoichi@ethereum.org>

	* env: introduced ccache

	* lifehack: Alt-Tab with one hand is a bit constraining. Using both hands it's much easier.

	* solidity: Translation of mapping[idx] being developed locally; now blocked by #1045.
	Maybe I should start creating a bigger PR.  That's easier to manage.

	* dry: now only one instruction is missing

	* yellowpaper: wondered how memory sizes are computed after [2^255-1, 7) bytes are accessed.
	Created a PR.

2016-09-08  Yoichi Hirai  <yoichi@ethereum.org>

	* dry: added ORIGIN, CODESIZE and PC instructions
	https://github.com/pirapira/dry-analyzer

	* solidity: trying solc --formal token.sol
	I'm meeting many problems one after another.  Many problems depend on each other: before solving one I cannot even observe the other.
	In solidity repository, reported #1054, #1062, #1065 and #1066 about this.
	I opened PRs for #1054 and #1062 but I haven't started with the last two.

	* lifehack:
	I started using something like a legal pad to keep track of what I'm doing.
	Whenever I come up with a thing to do, I add it as the last line, but keep on working on the current item.
	When the current item is not urgent it goes to the todo app, and the line is crossed out.
	When the current item depends on something else, I draw an arrow showing the dependency and move to the next item.
	When I have to wait for the machine, I start on the next item in parallel.
	One thing I found today.  I started writing the tmux pane index to the current items.
	This makes it much easier to go back where I was.

2016-09-07  Yoichi Hirai  <yoichi@ethereum.org>

	* ../solidity/libsolidity/formal/Why3Translator.cpp: Oh it collapeses all namespaces...
	(appendPreface): raw string literal R"....".

	* ../solidity/libsolidity/ast/AST_accept.h (dev): This file defines the visiting order
	(dev) saw the visitor pattern.  In OCaml there would be a traversing function that takes a function.

	* ../solidity/libsolidity/ast/AST.h (dev): need to know the difference of Default, Private, Internal, Public, External

	* ../solidity/libsolidity/ast/ASTAnnotations.h (dev): "///<" tells doxygen that the comment comes after the element

	* ../solidity/libsolidity/ast/Types.h (dev): what is TypeType? ... as in uint32(2)
	(dev): what is InaccessibleDynamic?
	(dev): what is a `using for` directive?
	(dev): why is IntegerType::m_bits signed?
	(dev): calldataEncodedSize assumes m_bits is not larger than 256.
	(dev): isAddress(), isSigned() why expose two bits instead of a ternary choice?
	(dev): FixpointType::calldataEncodedSize() also assumes everything is not bigger than 256 bits, but the constructor forces it.
	(dev): how to interface mappings when libraries
	(dev): `actualType` is is actual?

	* ../solidity/libsolidity/parsing/Token.h (dev):
	I cannot imagine how ElementaryTypeNameToken would be used.  Two numbers?

	* ../solidity/libsolidity/ast/ASTForward.h: I've never thought about accumulating many forward declarations into one file.  neat.

	* ../solidity/libsolidity/interface/Exceptions.h (dev): So, we live in ::dev::solidity
	(dev): Why3TranslatorError seems useful
	(dev): Why is a list called SecondarySourceLocation
	(dev): boost::error_info, wow this uses an incomplete type as a tag!

	* ../solidity/libdevcore/Exceptions.h (dev): err_info_comment etc seem useful.

	* ../solidity/libdevcore/FixedHash.h (dev): "\342\200\246" is what?

	* ../solidity/libdevcore/Common.h (dev): ScopeGuard should be useful

	* solidity: trying to solve some ambiguities in
	#1037, #1038

	* emacs: (setq-default c-default-style "bsd")
	This looked closer to our style.

	* read: http://www.spark-2014.org/entries/detail/research-corner-spark-2014-vs-frama-c-vs-why3
	compares Ada SPARK and Frama-C
	design choices
	ghost code
	understanding failures
	Does it make sense to dynamically check the post-conditions at runtime?
	  ah, OK, that's why E-ACSL was created.
	Does it make sense to allow program functions in the specification?
	  In that case, like in SPARK, side-effect-less functions should be considered.
	Maybe ghost codes should be supported
	Maybe view functions should be available in the specification

2016-09-06  Yoichi Hirai  <yoichi@ethereum.org>

	* solidity: test/soltest
	When I run it it shows a message `ERROR: ipcPath not set!`
	Maybe I should start a client instance for this one.
	Is this tool documented?

	* read: http://research.microsoft.com/en-us/um/people/nswamy/papers/solidether.pdf
	Eth effect useful under a particular design pattern, where any send failures would abort the whole program execution.
	The Eth condition can be strengthened so that it guarantees, after one call fails no subsequent calls would happen.

	* read: https://github.com/ewasm/evm2wasm/blob/master/wasm/ADDMOD.wast
	256 bit calculus -> 64 bit calculus measn everything has to be done four times.
	This kind of problem is a good target for Isabelle/HOL, for instance.

	* read:
	https://medium.com/@graycoding/lessons-learned-from-making-a-chess-game-for-ethereum-6917c01178b6
	This means
	- there should be a way to translate state diagram into executables
	- need of off-chain, on-chain integration
	  (maybe some partial evaluation type systems)

2016-09-05  Yoichi Hirai  <yoichi@ethereum.org>

	* dry: added arithmetic instructions
	https://github.com/pirapira/dry-analyzer/issues/6

	* cpp-ethereum: created #3287

	* solidity: reviewed #994 and #993

	* general: created a list of projects with merits/time points.

	* dry: created issues for missing opcodes.

	* ../go-ethereum/eth/api.go: TraceTransaction
	I came up with an idea of annotating vm.trace with the origins of the values on the stack.
	Maybe this would add {op_arg_origin: [{step: 6, desc: "CALLER"}]} in each step.
	http://ethereum.stackexchange.com/questions/4282/how-to-check-the-vm-trace-using-geth
	So, created a github issue about it.  https://github.com/pirapira/dry-analyzer/issues/11

2016-09-04  Yoichi Hirai  <yoichi@ethereum.org>

	* general: on Gitter, explained the trade off between the bytecode verification and Solidity verification
	bytecode has ease of verification, and the trustworthiness of the result
	Solidity has readability

	* ewasm: WASM semantics in K system
	https://github.com/kframework/wasm-semantics
	looks small.  Is this the whole language?

2016-09-03  Yoichi Hirai  <yoichi@ethereum.org>

	* why3: lively discussion on Gitter
	@mrsmkl shortened the why3-token file
	"why3" tactic not working with Coq 8.5
	@leonardoalt SeaHorn and CPAChecker might be able to prove invariants
	Think about Solidity -> LLVM and what can be done

	* dry: got a pull-request from @tomsib2001

	* env: got a chair and a desk at home.

	* dry: Dr. Y's anayzer out in reddit.  Got some feedbacks.  Need to implement all instructions.

2016-09-02  Yoichi Hirai  <yoichi@ethereum.org>

	* why3: double_wp module
	A formalization of a stack machine.  Possible to verify bytecode fragments and then compose them.

	* ../evmverif/why3: started formalizing EVM in Why3

	* why3: removed all unwanted axioms from token.mlw
	https://github.com/pirapira/token_why3/blob/master/token.mlw#L167

	* read: TALx86

	* ../solidity/libsolidity/ast/ASTForward.h (dev): a definition can appear in using A = B

	* emacs: M-. and then M-*

	* ../solidity/libsolidity/interface/InterfaceHandler.cpp (abiInterface): review #996
	https://github.com/ethereum/solidity/pull/996

	* emacs: configured C++ reading environment
	http://tuhdo.github.io/c-ide.html

	* comm: had a look at a thesis
	http://www.diku.dk/hjemmesider/ansatte/hvitved/publications/hvitved12phd.pdf

	* comm: made some comments on the announcement
	https://www.reddit.com/r/ethereum/comments/50ojqr/new_blog_post_dev_update_formal_methods/

	* emacs: configured a keyboard macro for adding an entry here
	;; http://0xcc.net/unimag/1/
	(defun memo ()
	  (interactive)
	  (add-change-log-entry
	    nil
	    (expand-file-name "~/src/record/ChangeLog")))
	(setq add-log-full-name "Yoichi Hirai"
	  add-log-mailing-address "yoichi@ethereum.org")
	(global-set-key (kbd "M-l") 'memo)

2016-09-01  Yoichi Hirai  <yoichi@ethereum.org>

	* why3: writing token.mlw
	https://github.com/pirapira/token_why3

	* comm: discussion with @chriseth
	Which direction we are heading
	What to look at

	* comm: joined many channels

